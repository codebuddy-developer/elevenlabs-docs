{
  "openapi": "3.1.0",
  "info": {
    "title": "ElevenLabs API Documentation",
    "description": "This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://elevenlabs.io. Our API is experimental so all endpoints are subject to change.",
    "version": "1.0"
  },
  "paths": {
    "/v1/history": {
      "get": {
        "tags": ["history"],
        "summary": "Get Generated Items",
        "description": "Returns metadata about all your generated audio.",
        "operationId": "Get_generated_items_v1_history_get",
        "parameters": [
          {
            "description": "How many history items to return at maximum. Can not exceed 1000, defaults to 100.",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Page Size",
              "description": "How many history items to return at maximum. Can not exceed 1000, defaults to 100.",
              "default": 100
            },
            "name": "page_size",
            "in": "query"
          },
          {
            "description": "After which history_item_id to start fetching, use this parameter to paginate across a large collection of history items. In case this parameter is not provided history items will be fetched starting from the most recently created one ordered descending by their creation date.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Start After History Item Id",
              "description": "After which history_item_id to start fetching, use this parameter to paginate across a large collection of history items. In case this parameter is not provided history items will be fetched starting from the most recently created one ordered descending by their creation date."
            },
            "name": "start_after_history_item_id",
            "in": "query"
          },
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHistoryResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/history/{history_item_id}": {
      "get": {
        "tags": ["history"],
        "summary": "Get History Item By Id",
        "description": "Returns information about an history item by its ID.",
        "operationId": "Get_history_item_by_ID_v1_history__history_item_id__get",
        "parameters": [
          {
            "description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "History Item Id",
              "description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs."
            },
            "example": "VW7YKqPnjY4h39yTbx2L",
            "name": "history_item_id",
            "in": "path"
          },
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryItemResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["history"],
        "summary": "Delete History Item",
        "description": "Delete a history item by its ID",
        "operationId": "Delete_history_item_v1_history__history_item_id__delete",
        "parameters": [
          {
            "description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "History Item Id",
              "description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs."
            },
            "example": "VW7YKqPnjY4h39yTbx2L",
            "name": "history_item_id",
            "in": "path"
          },
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/history/{history_item_id}/audio": {
      "get": {
        "tags": ["history"],
        "summary": "Get Audio From History Item",
        "description": "Returns the audio of an history item.",
        "operationId": "Get_audio_from_history_item_v1_history__history_item_id__audio_get",
        "parameters": [
          {
            "description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "History Item Id",
              "description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs."
            },
            "example": "VW7YKqPnjY4h39yTbx2L",
            "name": "history_item_id",
            "in": "path"
          },
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "audio/mpeg": { "schema": { "type": "string" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/history/download": {
      "post": {
        "tags": ["history"],
        "summary": "Download History Items",
        "description": "Download one or more history items. If one history item ID is provided, we will return a single audio file. If more than one history item IDs are provided, we will provide the history items packed into a .zip file.",
        "operationId": "Download_history_items_v1_history_download_post",
        "parameters": [
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Download_history_items_v1_history_download_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/voices/{voice_id}/samples/{sample_id}": {
      "delete": {
        "tags": ["samples"],
        "summary": "Delete Sample",
        "description": "Removes a sample by its ID.",
        "operationId": "Delete_sample_v1_voices__voice_id__samples__sample_id__delete",
        "parameters": [
          {
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Voice Id",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "voice_id",
            "in": "path"
          },
          {
            "description": "Sample ID to be used, you can use GET https://api.elevenlabs.io/v1/voices/{voice_id} to list all the available samples for a voice.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Sample Id",
              "description": "Sample ID to be used, you can use GET https://api.elevenlabs.io/v1/voices/{voice_id} to list all the available samples for a voice."
            },
            "example": "VW7YKqPnjY4h39yTbx2L",
            "name": "sample_id",
            "in": "path"
          },
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/voices/{voice_id}/samples/{sample_id}/audio": {
      "get": {
        "tags": ["samples"],
        "summary": "Get Audio From Sample",
        "description": "Returns the audio corresponding to a sample attached to a voice.",
        "operationId": "Get_audio_from_sample_v1_voices__voice_id__samples__sample_id__audio_get",
        "parameters": [
          {
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Voice Id",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "voice_id",
            "in": "path"
          },
          {
            "description": "Sample ID to be used, you can use GET https://api.elevenlabs.io/v1/voices/{voice_id} to list all the available samples for a voice.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Sample Id",
              "description": "Sample ID to be used, you can use GET https://api.elevenlabs.io/v1/voices/{voice_id} to list all the available samples for a voice."
            },
            "example": "VW7YKqPnjY4h39yTbx2L",
            "name": "sample_id",
            "in": "path"
          },
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "audio/*": {} }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/text-to-speech/{voice_id}": {
      "post": {
        "tags": ["text-to-speech"],
        "summary": "Text To Speech",
        "description": "Converts text into speech using a voice of your choice and returns audio.",
        "operationId": "Text_to_speech_v1_text_to_speech__voice_id__post",
        "parameters": [
          {
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Voice Id",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "voice_id",
            "in": "path"
          },
          {
            "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to 0.\n",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "How much we should optimize streaming request latency (time to first audio byte).",
              "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to 0.\n",
              "default": 0
            },
            "name": "optimize_streaming_latency",
            "in": "query"
          },
          {
            "description": "Output format of the generated audio. Must be one of:\nmp3_44100_64 - output format, mp3 with 44.1kHz sample rate at 64kbps.\nmp3_44100_96 - output format, mp3 with 44.1kHz sample rate at 96kbps.\nmp3_44100_128 - default output format, mp3 with 44.1kHz sample rate at 128kbps.\nmp3_44100_192 - output format, mp3 with 44.1kHz sample rate at 192kbps. Requires you to be subscribed to Creator tier or above.\npcm_16000 - PCM format (S16LE) with 16kHz sample rate.\npcm_22050 - PCM format (S16LE) with 22.05kHz sample rate.\npcm_24000 - PCM format (S16LE) with 24kHz sample rate.\npcm_44100 - PCM format (S16LE) with 44.1kHz sample rate. Requires you to be subscribed to Independent Publisher tier or above.\nulaw_8000 - μ-law format (sometimes written mu-law, often approximated as u-law) with 8kHz sample rate. Note that this format is commonly used for Twilio audio inputs.\n",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Output format of the generated audio.",
              "description": "Output format of the generated audio. Must be one of:\nmp3_44100_64 - output format, mp3 with 44.1kHz sample rate at 64kbps.\nmp3_44100_96 - output format, mp3 with 44.1kHz sample rate at 96kbps.\nmp3_44100_128 - default output format, mp3 with 44.1kHz sample rate at 128kbps.\nmp3_44100_192 - output format, mp3 with 44.1kHz sample rate at 192kbps. Requires you to be subscribed to Creator tier or above.\npcm_16000 - PCM format (S16LE) with 16kHz sample rate.\npcm_22050 - PCM format (S16LE) with 22.05kHz sample rate.\npcm_24000 - PCM format (S16LE) with 24kHz sample rate.\npcm_44100 - PCM format (S16LE) with 44.1kHz sample rate. Requires you to be subscribed to Independent Publisher tier or above.\nulaw_8000 - μ-law format (sometimes written mu-law, often approximated as u-law) with 8kHz sample rate. Note that this format is commonly used for Twilio audio inputs.\n",
              "default": "mp3_44100_128"
            },
            "name": "output_format",
            "in": "query"
          },
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Text_to_speech_v1_text_to_speech__voice_id__post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "audio/mpeg": { "schema": { "type": "string" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/text-to-speech/{voice_id}/stream": {
      "post": {
        "tags": ["text-to-speech"],
        "summary": "Text To Speech",
        "description": "Converts text into speech using a voice of your choice and returns audio as an audio stream.",
        "operationId": "Text_to_speech_v1_text_to_speech__voice_id__stream_post",
        "parameters": [
          {
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Voice Id",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "voice_id",
            "in": "path"
          },
          {
            "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to 0.\n",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "How much we should optimize streaming request latency (time to first audio byte).",
              "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to 0.\n",
              "default": 0
            },
            "name": "optimize_streaming_latency",
            "in": "query"
          },
          {
            "description": "Output format of the generated audio. Must be one of:\nmp3_44100_64 - output format, mp3 with 44.1kHz sample rate at 64kbps.\nmp3_44100_96 - output format, mp3 with 44.1kHz sample rate at 96kbps.\nmp3_44100_128 - default output format, mp3 with 44.1kHz sample rate at 128kbps.\nmp3_44100_192 - output format, mp3 with 44.1kHz sample rate at 192kbps. Requires you to be subscribed to Creator tier or above.\npcm_16000 - PCM format (S16LE) with 16kHz sample rate.\npcm_22050 - PCM format (S16LE) with 22.05kHz sample rate.\npcm_24000 - PCM format (S16LE) with 24kHz sample rate.\npcm_44100 - PCM format (S16LE) with 44.1kHz sample rate. Requires you to be subscribed to Independent Publisher tier or above.\nulaw_8000 - μ-law format (sometimes written mu-law, often approximated as u-law) with 8kHz sample rate. Note that this format is commonly used for Twilio audio inputs.\n",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Output format of the generated audio.",
              "description": "Output format of the generated audio. Must be one of:\nmp3_44100_64 - output format, mp3 with 44.1kHz sample rate at 64kbps.\nmp3_44100_96 - output format, mp3 with 44.1kHz sample rate at 96kbps.\nmp3_44100_128 - default output format, mp3 with 44.1kHz sample rate at 128kbps.\nmp3_44100_192 - output format, mp3 with 44.1kHz sample rate at 192kbps. Requires you to be subscribed to Creator tier or above.\npcm_16000 - PCM format (S16LE) with 16kHz sample rate.\npcm_22050 - PCM format (S16LE) with 22.05kHz sample rate.\npcm_24000 - PCM format (S16LE) with 24kHz sample rate.\npcm_44100 - PCM format (S16LE) with 44.1kHz sample rate. Requires you to be subscribed to Independent Publisher tier or above.\nulaw_8000 - μ-law format (sometimes written mu-law, often approximated as u-law) with 8kHz sample rate. Note that this format is commonly used for Twilio audio inputs.\n",
              "default": "mp3_44100_128"
            },
            "name": "output_format",
            "in": "query"
          },
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Text_to_speech_v1_text_to_speech__voice_id__stream_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/speech-to-speech/{voice_id}": {
      "post": {
        "tags": ["speech-to-speech"],
        "summary": "Speech To Speech",
        "description": "Create speech by combining the content and emotion of the uploaded audio with a voice of your choice.",
        "operationId": "Speech_to_Speech_v1_speech_to_speech__voice_id__post",
        "parameters": [
          {
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Voice Id",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "voice_id",
            "in": "path"
          },
          {
            "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to 0.\n",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "How much we should optimize streaming request latency (time to first audio byte).",
              "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to 0.\n",
              "default": 0
            },
            "name": "optimize_streaming_latency",
            "in": "query"
          },
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Speech_to_Speech_v1_speech_to_speech__voice_id__post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "audio/mpeg": { "schema": { "type": "string" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/speech-to-speech/{voice_id}/stream": {
      "post": {
        "tags": ["speech-to-speech"],
        "summary": "Speech To Speech Streaming",
        "description": "Create speech by combining the content and emotion of the uploaded audio with a voice of your choice and returns an audio stream.",
        "operationId": "Speech_to_Speech_Streaming_v1_speech_to_speech__voice_id__stream_post",
        "parameters": [
          {
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Voice Id",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "voice_id",
            "in": "path"
          },
          {
            "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to 0.\n",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "How much we should optimize streaming request latency (time to first audio byte).",
              "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to 0.\n",
              "default": 0
            },
            "name": "optimize_streaming_latency",
            "in": "query"
          },
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Speech_to_Speech_Streaming_v1_speech_to_speech__voice_id__stream_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/user/subscription": {
      "get": {
        "tags": ["user"],
        "summary": "Get User Subscription Info",
        "description": "Gets extended information about the users subscription",
        "operationId": "Get_user_subscription_info_v1_user_subscription_get",
        "parameters": [
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedSubscriptionResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/user": {
      "get": {
        "tags": ["user"],
        "summary": "Get User Info",
        "description": "Gets information about the user",
        "operationId": "Get_user_info_v1_user_get",
        "parameters": [
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserResponseModel" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/user/send-verification-email": {
      "post": {
        "tags": ["user"],
        "summary": "Send Verification Email",
        "description": "Send a new verification email",
        "operationId": "Send_verification_email_v1_user_send_verification_email_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Send_verification_email_v1_user_send_verification_email_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/user/send-password-reset-email": {
      "post": {
        "tags": ["user"],
        "summary": "Send Password Reset Email",
        "description": "Send a new password password reset email",
        "operationId": "Send_password_reset_email_v1_user_send_password_reset_email_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Send_password_reset_email_v1_user_send_password_reset_email_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/create-user": {
      "post": {
        "summary": "Create User",
        "operationId": "create_user_c185a1ff66f4a1feaeb19931d4be4175_create_user_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_user_c185a1ff66f4a1feaeb19931d4be4175_create_user_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/user/update-mfa-factors": {
      "post": {
        "summary": "Update Mfa Factors",
        "operationId": "update_mfa_factors_v1_user_update_mfa_factors_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/user/prepare-internal-verification": {
      "post": {
        "summary": "Prepare Internal Verification",
        "description": "This step is necessary to have some protection against users creating an account using an email address and password\nsign-in that they have no access to. Then they hope the victim clicks the verification email. After that the victim signs up\nusing for example gmail, in this case the accounts will be linked and the attacker will have access to the victims account using\nthe password he specified.",
        "operationId": "prepare_internal_verification_v1_user_prepare_internal_verification_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_prepare_internal_verification_v1_user_prepare_internal_verification_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/user/post-registration-user-setup": {
      "post": {
        "tags": ["user"],
        "summary": "External Provider User Setup",
        "description": "Should be called to setup a user following their registration via an external-provider",
        "operationId": "External_Provider_user_setup_v1_user_post_registration_user_setup_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_External_Provider_user_setup_v1_user_post_registration_user_setup_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/user/pre-sign-up": {
      "post": {
        "summary": "Set Account Registration Metadata",
        "description": "Called before a user signs up with email and password",
        "operationId": "set_account_registration_metadata_v1_user_pre_sign_up_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_set_account_registration_metadata_v1_user_pre_sign_up_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/user/opt-out-of-updates": {
      "post": {
        "summary": "Opt Out Of Updates",
        "operationId": "opt_out_of_updates_v1_user_opt_out_of_updates_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_opt_out_of_updates_v1_user_opt_out_of_updates_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/voices": {
      "get": {
        "tags": ["voices"],
        "summary": "Get Voices",
        "description": "Gets a list of all available voices for a user.",
        "operationId": "Get_voices_v1_voices_get",
        "parameters": [
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVoicesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/voices/settings/default": {
      "get": {
        "tags": ["voices"],
        "summary": "Get Default Voice Settings.",
        "description": "Gets the default settings for voices. \"similarity_boost\" corresponds to\"Clarity + Similarity Enhancement\" in the web app and \"stability\" corresponds to \"Stability\" slider in the web app.",
        "operationId": "Get_default_voice_settings__v1_voices_settings_default_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceSettingsResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/v1/voices/{voice_id}/settings": {
      "get": {
        "tags": ["voices"],
        "summary": "Get Voice Settings",
        "description": "Returns the settings for a specific voice. \"similarity_boost\" corresponds to\"Clarity + Similarity Enhancement\" in the web app and \"stability\" corresponds to \"Stability\" slider in the web app.",
        "operationId": "Get_voice_settings_v1_voices__voice_id__settings_get",
        "parameters": [
          {
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Voice Id",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "voice_id",
            "in": "path"
          },
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceSettingsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/voices/{voice_id}": {
      "get": {
        "tags": ["voices"],
        "summary": "Get Voice",
        "description": "Returns metadata about a specific voice.",
        "operationId": "Get_voice_v1_voices__voice_id__get",
        "parameters": [
          {
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Voice Id",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "voice_id",
            "in": "path"
          },
          {
            "description": "If set will return settings information corresponding to the voice, requires authorization.",
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "With Settings",
              "description": "If set will return settings information corresponding to the voice, requires authorization.",
              "default": false
            },
            "name": "with_settings",
            "in": "query"
          },
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/VoiceResponseModel" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["voices"],
        "summary": "Delete Voice",
        "description": "Deletes a voice by its ID.",
        "operationId": "Delete_voice_v1_voices__voice_id__delete",
        "parameters": [
          {
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Voice Id",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "voice_id",
            "in": "path"
          },
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/voices/{voice_id}/settings/edit": {
      "post": {
        "tags": ["voices"],
        "summary": "Edit Voice Settings",
        "description": "Edit your settings for a specific voice. \"similarity_boost\" corresponds to\"Clarity + Similarity Enhancement\" in the web app and \"stability\" corresponds to \"Stability\" slider in the web app.",
        "operationId": "Edit_voice_settings_v1_voices__voice_id__settings_edit_post",
        "parameters": [
          {
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Voice Id",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "voice_id",
            "in": "path"
          },
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  { "$ref": "#/components/schemas/VoiceSettingsResponseModel" }
                ],
                "title": "Settings",
                "description": "The settings for a specific voice."
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/voices/add": {
      "post": {
        "tags": ["voices"],
        "summary": "Add Voice",
        "description": "Add a new voice to your collection of voices in VoiceLab.",
        "operationId": "Add_voice_v1_voices_add_post",
        "parameters": [
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_voice_v1_voices_add_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddVoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/voices/{voice_id}/edit": {
      "post": {
        "tags": ["voices"],
        "summary": "Edit Voice",
        "description": "Edit a voice created by you.",
        "operationId": "Edit_voice_v1_voices__voice_id__edit_post",
        "parameters": [
          {
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Voice Id",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "voice_id",
            "in": "path"
          },
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Edit_voice_v1_voices__voice_id__edit_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/voices/{voice_id}/manual-verification": {
      "post": {
        "tags": ["voices"],
        "summary": "Manual Verification Request",
        "description": "Sends request for manual verification",
        "operationId": "Manual_verification_request_v1_voices__voice_id__manual_verification_post",
        "parameters": [
          {
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Voice Id",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "voice_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Manual_verification_request_v1_voices__voice_id__manual_verification_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/voices/{voice_id}/share-library": {
      "post": {
        "tags": ["voices"],
        "summary": "Voice Library Share",
        "description": "Enable sharing in voice library",
        "operationId": "Voice_Library_Share_v1_voices__voice_id__share_library_post",
        "parameters": [
          {
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Voice Id",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "voice_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "boolean",
                "title": "Enable",
                "description": "Whether to enable/disable sharing of the given voice to voice library."
              },
              "example": true
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/voices/{voice_id}/share": {
      "post": {
        "tags": ["voices"],
        "summary": "Share Voice",
        "description": "Shares a voice via url.",
        "operationId": "Share_voice_v1_voices__voice_id__share_post",
        "parameters": [
          {
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Voice Id",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "voice_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Share_voice_v1_voices__voice_id__share_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/voices/{public_user_id}/{voice_id}": {
      "get": {
        "tags": ["voices"],
        "summary": "Get Sharing Voice",
        "description": "Returns metadata about a sharing voice.",
        "operationId": "Get_sharing_voice_v1_voices__public_user_id___voice_id__get",
        "parameters": [
          {
            "description": "Public user ID used to publicly identify ElevenLabs users.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Public User Id",
              "description": "Public user ID used to publicly identify ElevenLabs users."
            },
            "example": "63e06b7e7cafdc46be4d2e0b3f045940231ae058d508589653d74d1265a574ca",
            "name": "public_user_id",
            "in": "path"
          },
          {
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Voice Id",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "voice_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/VoiceResponseModel" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/voices/add/{public_user_id}/{voice_id}": {
      "post": {
        "tags": ["voices"],
        "summary": "Add Sharing Voice",
        "description": "Add a sharing voice to your collection of voices in VoiceLab.",
        "operationId": "Add_sharing_voice_v1_voices_add__public_user_id___voice_id__post",
        "parameters": [
          {
            "description": "Public user ID used to publicly identify ElevenLabs users.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Public User Id",
              "description": "Public user ID used to publicly identify ElevenLabs users."
            },
            "example": "63e06b7e7cafdc46be4d2e0b3f045940231ae058d508589653d74d1265a574ca",
            "name": "public_user_id",
            "in": "path"
          },
          {
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Voice Id",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "voice_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_sharing_voice_v1_voices_add__public_user_id___voice_id__post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddVoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/voices/{voice_id}/share/stats": {
      "get": {
        "tags": ["voices"],
        "summary": "Voice Sharing Stats",
        "description": "Returns the stats for the voice that is being shared with other users.",
        "operationId": "Voice_sharing_stats_v1_voices__voice_id__share_stats_get",
        "parameters": [
          {
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Voice Id",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "voice_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceSharingStatsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/projects": {
      "get": {
        "tags": ["projects"],
        "summary": "Get Projects",
        "description": "Returns a list of your projects together and its metadata.",
        "operationId": "Get_projects_v1_projects_get",
        "parameters": [
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/projects/add": {
      "post": {
        "tags": ["projects"],
        "summary": "Add Project",
        "description": "Creates a new project, it can be either initialized as blank, from a document or from a URL.",
        "operationId": "Add_project_v1_projects_add_post",
        "parameters": [
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_project_v1_projects_add_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}": {
      "get": {
        "tags": ["projects"],
        "summary": "Get Project By Id",
        "description": "Returns information about a specific project. This endpoint returns more detailed information about a project than GET api.elevenlabs.io/v1/projects.",
        "operationId": "Get_project_by_ID_v1_projects__project_id__get",
        "parameters": [
          {
            "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id",
              "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "project_id",
            "in": "path"
          },
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectExtendedResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["projects"],
        "summary": "Delete Project",
        "description": "Delete a project by its project_id.",
        "operationId": "Delete_project_v1_projects__project_id__delete",
        "parameters": [
          {
            "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id",
              "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "project_id",
            "in": "path"
          },
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/convert": {
      "post": {
        "tags": ["projects"],
        "summary": "Convert Project",
        "description": "Starts conversion of a project and all of its chapters.",
        "operationId": "Convert_project_v1_projects__project_id__convert_post",
        "parameters": [
          {
            "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id",
              "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "project_id",
            "in": "path"
          },
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/snapshots": {
      "get": {
        "tags": ["projects"],
        "summary": "Get Project Snapshots",
        "description": "Gets the snapshots of a project.",
        "operationId": "Get_project_snapshots_v1_projects__project_id__snapshots_get",
        "parameters": [
          {
            "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id",
              "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "project_id",
            "in": "path"
          },
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectSnapshotsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/snapshots/{project_snapshot_id}/stream": {
      "post": {
        "tags": ["projects"],
        "summary": "Stream Project Audio",
        "description": "Stream the audio from a project snapshot.",
        "operationId": "Stream_project_audio_v1_projects__project_id__snapshots__project_snapshot_id__stream_post",
        "parameters": [
          {
            "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id",
              "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "project_id",
            "in": "path"
          },
          {
            "description": "The project_snapshot_id of the project snapshot. You can query GET /v1/projects/{project_id}/snapshots to list all available snapshots for a project.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Snapshot Id",
              "description": "The project_snapshot_id of the project snapshot. You can query GET /v1/projects/{project_id}/snapshots to list all available snapshots for a project."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "project_snapshot_id",
            "in": "path"
          },
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "responses": {
          "200": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/chapters": {
      "get": {
        "tags": ["projects"],
        "summary": "Get Chapters",
        "description": "Returns a list of your chapters for a project together and its metadata.",
        "operationId": "Get_chapters_v1_projects__project_id__chapters_get",
        "parameters": [
          {
            "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id",
              "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "project_id",
            "in": "path"
          },
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetChaptersResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/chapters/{chapter_id}": {
      "get": {
        "tags": ["projects"],
        "summary": "Get Chapter By Id",
        "description": "Returns information about a specific chapter.",
        "operationId": "Get_chapter_by_ID_v1_projects__project_id__chapters__chapter_id__get",
        "parameters": [
          {
            "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id",
              "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "project_id",
            "in": "path"
          },
          {
            "description": "The chapter_id of the chapter. You can query GET https://api.elevenlabs.io/v1/projects/{project_id}/chapters to list all available chapters for a project.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Chapter Id",
              "description": "The chapter_id of the chapter. You can query GET https://api.elevenlabs.io/v1/projects/{project_id}/chapters to list all available chapters for a project."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "chapter_id",
            "in": "path"
          },
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["projects"],
        "summary": "Delete Chapter",
        "description": "Delete a chapter by its chapter_id.",
        "operationId": "Delete_chapter_v1_projects__project_id__chapters__chapter_id__delete",
        "parameters": [
          {
            "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id",
              "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "project_id",
            "in": "path"
          },
          {
            "description": "The chapter_id of the chapter. You can query GET https://api.elevenlabs.io/v1/projects/{project_id}/chapters to list all available chapters for a project.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Chapter Id",
              "description": "The chapter_id of the chapter. You can query GET https://api.elevenlabs.io/v1/projects/{project_id}/chapters to list all available chapters for a project."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "chapter_id",
            "in": "path"
          },
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/chapters/{chapter_id}/convert": {
      "post": {
        "tags": ["projects"],
        "summary": "Convert Chapter",
        "description": "Starts conversion of a specific chapter.",
        "operationId": "Convert_chapter_v1_projects__project_id__chapters__chapter_id__convert_post",
        "parameters": [
          {
            "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id",
              "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "project_id",
            "in": "path"
          },
          {
            "description": "The chapter_id of the chapter. You can query GET https://api.elevenlabs.io/v1/projects/{project_id}/chapters to list all available chapters for a project.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Chapter Id",
              "description": "The chapter_id of the chapter. You can query GET https://api.elevenlabs.io/v1/projects/{project_id}/chapters to list all available chapters for a project."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "chapter_id",
            "in": "path"
          },
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/chapters/{chapter_id}/snapshots": {
      "get": {
        "tags": ["projects"],
        "summary": "Get Chapter Snapshots",
        "description": "Gets information about all the snapshots of a chapter, each snapshot corresponds can be downloaded as audio. Whenever a chapter is converted a snapshot will be automatically created.",
        "operationId": "Get_chapter_snapshots_v1_projects__project_id__chapters__chapter_id__snapshots_get",
        "parameters": [
          {
            "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id",
              "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "project_id",
            "in": "path"
          },
          {
            "description": "The chapter_id of the chapter. You can query GET https://api.elevenlabs.io/v1/projects/{project_id}/chapters to list all available chapters for a project.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Chapter Id",
              "description": "The chapter_id of the chapter. You can query GET https://api.elevenlabs.io/v1/projects/{project_id}/chapters to list all available chapters for a project."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "chapter_id",
            "in": "path"
          },
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterSnapshotsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/chapters/{chapter_id}/snapshots/{chapter_snapshot_id}/stream": {
      "post": {
        "tags": ["projects"],
        "summary": "Stream Chapter Audio",
        "description": "Stream the audio from a chapter snapshot. Use GET /v1/projects/{project_id}/chapters/{chapter_id}/snapshots to return the chapter snapshots of a chapter.",
        "operationId": "Stream_chapter_audio_v1_projects__project_id__chapters__chapter_id__snapshots__chapter_snapshot_id__stream_post",
        "parameters": [
          {
            "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id",
              "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "project_id",
            "in": "path"
          },
          {
            "description": "The chapter_id of the chapter. You can query GET https://api.elevenlabs.io/v1/projects/{project_id}/chapters to list all available chapters for a project.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Chapter Id",
              "description": "The chapter_id of the chapter. You can query GET https://api.elevenlabs.io/v1/projects/{project_id}/chapters to list all available chapters for a project."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "chapter_id",
            "in": "path"
          },
          {
            "description": "The chapter_snapshot_id of the chapter snapshot. You can query GET /v1/projects/{project_id}/chapters/{chapter_id}/snapshots to the all available snapshots for a chapter.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Chapter Snapshot Id",
              "description": "The chapter_snapshot_id of the chapter snapshot. You can query GET /v1/projects/{project_id}/chapters/{chapter_id}/snapshots to the all available snapshots for a chapter."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "chapter_snapshot_id",
            "in": "path"
          },
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "responses": {
          "200": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/reset-projects": {
      "post": {
        "summary": "Reset Projects",
        "description": "This function will be called on an interval by a cloud function. Only 1 function can be running at a time due to GlobalLock.",
        "operationId": "reset_projects_c185a1ff66f4a1feaeb19931d4be4175_reset_projects_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_reset_projects_c185a1ff66f4a1feaeb19931d4be4175_reset_projects_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/convert-projects": {
      "post": {
        "summary": "Convert Projects",
        "operationId": "convert_projects_c185a1ff66f4a1feaeb19931d4be4175_convert_projects_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_convert_projects_c185a1ff66f4a1feaeb19931d4be4175_convert_projects_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/metadata": {
      "post": {
        "tags": ["dubbing"],
        "summary": "Get Dubbing Metadata For Url.",
        "description": "Get dubbing metadata for url.",
        "operationId": "Get_dubbing_metadata_for_url__v1_dubbing_metadata_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Get_dubbing_metadata_for_url__v1_dubbing_metadata_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DubbingInputResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing": {
      "post": {
        "tags": ["dubbing"],
        "summary": "Dub A Video Or An Audio File",
        "description": "Dubs provided audio or video file into given language.",
        "operationId": "Dub_a_video_or_an_audio_file_v1_dubbing_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Dub_a_video_or_an_audio_file_v1_dubbing_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoDubbingResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/fix-killed-dubbings": {
      "post": {
        "summary": "Fix Killed Dubbings",
        "description": "This function will be called on an interval by a cloud function. Only 1 function can be running at a time due to GlobalLock.",
        "operationId": "fix_killed_dubbings_c185a1ff66f4a1feaeb19931d4be4175_fix_killed_dubbings_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_fix_killed_dubbings_c185a1ff66f4a1feaeb19931d4be4175_fix_killed_dubbings_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/{dubbing_id}/audio/{language_code}": {
      "get": {
        "tags": ["dubbing"],
        "summary": "Get Dubbed File",
        "description": "Returns dubbed file.",
        "operationId": "Get_dubbed_file_v1_dubbing__dubbing_id__audio__language_code__get",
        "parameters": [
          {
            "description": "ID of the dubbing project.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dubbing Id",
              "description": "ID of the dubbing project."
            },
            "name": "dubbing_id",
            "in": "path"
          },
          {
            "description": "ID of the language.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Language Code",
              "description": "ID of the language."
            },
            "name": "language_code",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/{dubbing_id}": {
      "delete": {
        "tags": ["dubbing"],
        "summary": "Delete Dubbing Project",
        "description": "Deletes a dubbing project.",
        "operationId": "Delete_dubbing_project_v1_dubbing__dubbing_id__delete",
        "parameters": [
          {
            "description": "ID of the dubbing project.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dubbing Id",
              "description": "ID of the dubbing project."
            },
            "name": "dubbing_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/{dubbing_id}/editor/{version_id}": {
      "get": {
        "tags": ["dubbing"],
        "summary": "Returns Dubbing Editor Metadata.",
        "description": "Returns dubbing editor metadata.",
        "operationId": "Returns_dubbing_editor_metadata__v1_dubbing__dubbing_id__editor__version_id__get",
        "parameters": [
          {
            "description": "ID of the dubbing project.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dubbing Id",
              "description": "ID of the dubbing project."
            },
            "name": "dubbing_id",
            "in": "path"
          },
          {
            "description": "ID of the dubbing version. 'latest' for the latest version.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Version Id",
              "description": "ID of the dubbing version. 'latest' for the latest version."
            },
            "name": "version_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/{dubbing_id}/editor": {
      "post": {
        "tags": ["dubbing"],
        "summary": "Updates Latest Version Of Editor Data.",
        "description": "Updates latest version of editor data for the given dubbing project.",
        "operationId": "Updates_latest_version_of_editor_data__v1_dubbing__dubbing_id__editor_post",
        "parameters": [
          {
            "description": "ID of the dubbing project.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dubbing Id",
              "description": "ID of the dubbing project."
            },
            "name": "dubbing_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Data",
                "description": "Editor Data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/{dubbing_id}/translate": {
      "post": {
        "tags": ["dubbing"],
        "summary": "Translates Text.",
        "description": "Translates provided text in source language to the target language. Tries to preserve the length for dubbing.\n    Note: the translation is not deterministic!",
        "operationId": "Translates_text__v1_dubbing__dubbing_id__translate_post",
        "parameters": [
          {
            "description": "ID of the dubbing project.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dubbing Id",
              "description": "ID of the dubbing project."
            },
            "name": "dubbing_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Translates_text__v1_dubbing__dubbing_id__translate_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DubbingTranslateResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/{dubbing_id}/transcribe": {
      "post": {
        "tags": ["dubbing"],
        "summary": "Transcribes Audio.",
        "description": "Transcribes the provided audio with the given language code.\n    Note: the transcription is not deterministic!",
        "operationId": "Transcribes_audio__v1_dubbing__dubbing_id__transcribe_post",
        "parameters": [
          {
            "description": "ID of the dubbing project.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dubbing Id",
              "description": "ID of the dubbing project."
            },
            "name": "dubbing_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Transcribes_audio__v1_dubbing__dubbing_id__transcribe_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DubbingTranscribeResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/{dubbing_id}/create-voice": {
      "post": {
        "tags": ["dubbing"],
        "summary": "Creates Voice From The Provided Samples And Returns Voice Uid.",
        "description": "Creates a new voice uid that can be used for dubbing, based on the provided input samples.\n    The process is deterministic - same samples will result in the same underlying embedding, but this function does not do caching.",
        "operationId": "Creates_voice_from_the_provided_samples_and_returns_voice_uid__v1_dubbing__dubbing_id__create_voice_post",
        "parameters": [
          {
            "description": "ID of the dubbing project.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dubbing Id",
              "description": "ID of the dubbing project."
            },
            "name": "dubbing_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": { "$ref": "#/components/schemas/CBRAudioReference" },
                "type": "array",
                "title": "Audios",
                "description": "Voice samples to use for dubbing voice."
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DubbingCreateVoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/{dubbing_id}/dub": {
      "post": {
        "tags": ["dubbing"],
        "summary": "Dubs Provided Text With Provided Voice And Settings.",
        "description": "Performs actual dubbing, based on the input settings, and returns the audio uid.",
        "operationId": "Dubs_provided_text_with_provided_voice_and_settings__v1_dubbing__dubbing_id__dub_post",
        "parameters": [
          {
            "description": "ID of the dubbing project.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dubbing Id",
              "description": "ID of the dubbing project."
            },
            "name": "dubbing_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Dubs_provided_text_with_provided_voice_and_settings__v1_dubbing__dubbing_id__dub_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CBRAudioReference" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/{dubbing_id}/editor/new-version": {
      "post": {
        "tags": ["dubbing"],
        "summary": "Creates A New Version Of The Dubbing Editor State.",
        "description": "Creates a new version of the dubbing editor state.",
        "operationId": "Creates_a_new_version_of_the_dubbing_editor_state__v1_dubbing__dubbing_id__editor_new_version_post",
        "parameters": [
          {
            "description": "ID of the dubbing project.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dubbing Id",
              "description": "ID of the dubbing project."
            },
            "name": "dubbing_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Data",
                "description": "Editor Data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditorSnapshotResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/{dubbing_id}/editor/{version_id}/restore": {
      "post": {
        "tags": ["dubbing"],
        "summary": "Restores The Dubbing Editor State To The Given Version.",
        "description": "Restores the dubbing editor state to the given version and creates new (latest) version out of it.",
        "operationId": "Restores_the_dubbing_editor_state_to_the_given_version__v1_dubbing__dubbing_id__editor__version_id__restore_post",
        "parameters": [
          {
            "description": "ID of the dubbing project.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dubbing Id",
              "description": "ID of the dubbing project."
            },
            "name": "dubbing_id",
            "in": "path"
          },
          {
            "description": "ID of the dubbing version. 'latest' for the latest version.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Version Id",
              "description": "ID of the dubbing version. 'latest' for the latest version."
            },
            "name": "version_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditorSnapshotResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/{dubbing_id}/render": {
      "post": {
        "tags": ["dubbing"],
        "summary": "Render A Video For A Dub",
        "description": "Render a video for a dub",
        "operationId": "Render_a_video_for_a_dub_v1_dubbing__dubbing_id__render_post",
        "parameters": [
          {
            "description": "ID of the dubbing project.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dubbing Id",
              "description": "ID of the dubbing project."
            },
            "name": "dubbing_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Data",
                "description": "Render Data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/create-checkout-session": {
      "post": {
        "summary": "Create Checkout Session",
        "operationId": "create_checkout_session_create_checkout_session_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_checkout_session_create_checkout_session_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/create-update-payment-methods-session": {
      "post": {
        "summary": "Create Update Payment Methods Session",
        "description": "Create an update payment methods session for a subscribed user.",
        "operationId": "Create_update_payment_methods_session_create_update_payment_methods_session_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/change-subscription": {
      "post": {
        "summary": "Change Subscription",
        "operationId": "change_subscription_change_subscription_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_change_subscription_change_subscription_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/renew-subscription": {
      "post": {
        "summary": "Renew Subscription",
        "operationId": "renew_subscription_renew_subscription_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/cancel-subscription": {
      "post": {
        "summary": "Cancel Subscription",
        "operationId": "cancel_subscription_cancel_subscription_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/cancel-downgrade": {
      "post": {
        "summary": "Cancel Downgrade",
        "operationId": "cancel_downgrade_cancel_downgrade_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/create-portal-session": {
      "post": {
        "summary": "Create Portal Session",
        "operationId": "create_portal_session_create_portal_session_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/report-usage": {
      "post": {
        "summary": "Report Usage To Stripe",
        "operationId": "report_usage_to_stripe_c185a1ff66f4a1feaeb19931d4be4175_report_usage_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_report_usage_to_stripe_c185a1ff66f4a1feaeb19931d4be4175_report_usage_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/refresh-character-count": {
      "post": {
        "summary": "Refresh Character Count",
        "description": "This function will be called on an interval by a cloud function.",
        "operationId": "refresh_character_count_c185a1ff66f4a1feaeb19931d4be4175_refresh_character_count_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_refresh_character_count_c185a1ff66f4a1feaeb19931d4be4175_refresh_character_count_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/stripe-webhook": {
      "post": {
        "summary": "Stripe Webhook",
        "operationId": "stripe_webhook_stripe_webhook_post",
        "parameters": [
          {
            "required": false,
            "schema": { "type": "string", "title": "Stripe-Signature" },
            "name": "stripe-signature",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/zendesk-webhook": {
      "post": {
        "summary": "Zendesk Webhook",
        "operationId": "zendesk_webhook_zendesk_webhook_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/v1/google-ads-visit": {
      "post": {
        "summary": "Google Ads Visit",
        "operationId": "google_ads_visit_v1_google_ads_visit_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_google_ads_visit_v1_google_ads_visit_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/detect-abuse": {
      "post": {
        "summary": "Detect Abuse",
        "description": "This function will be called on an interval by a cloud function.\n\nIt goes over all tts requests and groups them by ip. It counts number of entirely free accounts in each IP.\n\nIf the number of entirely free accounts per given IP exceeds MAX_ACCOUNTS_PER_IP_ALLOWED then the ip is \"banned\".\n\n\"Ban\" effectively means that any free TTS call from this IP results in error saying that the user triggered abuse\ndetectors and need to purchase a paid plan to continue. Such ban is permanent. Anonymous calls from banned IP are\nstill allowed.",
        "operationId": "detect_abuse_c185a1ff66f4a1feaeb19931d4be4175_detect_abuse_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_detect_abuse_c185a1ff66f4a1feaeb19931d4be4175_detect_abuse_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/6rnp7bvc2t/upgrade-subscription": {
      "post": {
        "tags": ["admin"],
        "summary": "Add Trial",
        "description": "Add a trial to an account.",
        "operationId": "Add_trial_admin_6rnp7bvc2t_upgrade_subscription_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_trial_admin_6rnp7bvc2t_upgrade_subscription_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/6rnp7bvc2t/verify-email": {
      "post": {
        "tags": ["admin"],
        "summary": "Vefify Email",
        "description": "Manually verify the email of an account.",
        "operationId": "Vefify_Email_admin_6rnp7bvc2t_verify_email_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Vefify_Email_admin_6rnp7bvc2t_verify_email_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/6rnp7bvc2t/add-trial": {
      "post": {
        "tags": ["admin"],
        "summary": "Add Trial",
        "description": "Add a trial to an account.",
        "operationId": "Add_trial_admin_6rnp7bvc2t_add_trial_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_trial_admin_6rnp7bvc2t_add_trial_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/6rnp7bvc2t/add-delayed-payment-methods-permissions": {
      "post": {
        "tags": ["admin"],
        "summary": "Adds Delayed Payment Methods To An Account",
        "description": "Adds permissions to use delayed payment methods to an account.",
        "operationId": "Adds_delayed_payment_methods_to_an_account_admin_6rnp7bvc2t_add_delayed_payment_methods_permissions_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Adds_delayed_payment_methods_to_an_account_admin_6rnp7bvc2t_add_delayed_payment_methods_permissions_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/6rnp7bvc2t/create-subscription": {
      "post": {
        "tags": ["admin"],
        "summary": "Create A Subscription",
        "description": "Create a subscription for an account on free tier.",
        "operationId": "Create_a_subscription_admin_6rnp7bvc2t_create_subscription_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_a_subscription_admin_6rnp7bvc2t_create_subscription_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/6rnp7bvc2t/professional-voices": {
      "post": {
        "tags": ["admin"],
        "summary": "Voices To Verify.",
        "description": "Returns voice",
        "operationId": "Voices_to_verify__admin_6rnp7bvc2t_professional_voices_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Voices_to_verify__admin_6rnp7bvc2t_professional_voices_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/6rnp7bvc2t/verify-voice": {
      "post": {
        "tags": ["admin"],
        "summary": "Vefify Voice",
        "description": "Manually verify voice for fine-tuning.",
        "operationId": "Vefify_Voice_admin_6rnp7bvc2t_verify_voice_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Vefify_Voice_admin_6rnp7bvc2t_verify_voice_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/6rnp7bvc2t/delete-voice": {
      "delete": {
        "tags": ["admin"],
        "summary": "Delete Voice",
        "description": "Manually delete voice.",
        "operationId": "Delete_Voice_admin_6rnp7bvc2t_delete_voice_delete",
        "parameters": [
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Delete_Voice_admin_6rnp7bvc2t_delete_voice_delete"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/6rnp7bvc2t/delete-verification-attempt": {
      "delete": {
        "tags": ["admin"],
        "summary": "Delete Voice",
        "description": "Delete verification attempt.",
        "operationId": "Delete_Voice_admin_6rnp7bvc2t_delete_verification_attempt_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Delete_Voice_admin_6rnp7bvc2t_delete_verification_attempt_delete"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/6rnp7bvc2t/start-fine-tuning": {
      "post": {
        "tags": ["admin"],
        "summary": "Start Fine-Tuning",
        "description": "Manually start fine-tuning for the given voice",
        "operationId": "Start_Fine_Tuning_admin_6rnp7bvc2t_start_fine_tuning_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Start_Fine_Tuning_admin_6rnp7bvc2t_start_fine_tuning_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/6rnp7bvc2t/enable-fine-tuning": {
      "post": {
        "tags": ["admin"],
        "summary": "Enable Fine-Tuning",
        "description": "Enables fine-tuning for the user.",
        "operationId": "Enable_fine_tuning_admin_6rnp7bvc2t_enable_fine_tuning_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Enable_fine_tuning_admin_6rnp7bvc2t_enable_fine_tuning_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/6rnp7bvc2t/enable-manual-verification": {
      "post": {
        "tags": ["admin"],
        "summary": "Enable Manual Verification",
        "description": "Enables user to request manual verification.",
        "operationId": "Enable_manual_verification_admin_6rnp7bvc2t_enable_manual_verification_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Enable_manual_verification_admin_6rnp7bvc2t_enable_manual_verification_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/6rnp7bvc2t/add-fine-tuned-model": {
      "post": {
        "tags": ["admin"],
        "summary": "Add Fine-Tuned Model",
        "description": "Links a fine-tuned model to the user's voice.",
        "operationId": "Add_fine_tuned_model_admin_6rnp7bvc2t_add_fine_tuned_model_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_fine_tuned_model_admin_6rnp7bvc2t_add_fine_tuned_model_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/6rnp7bvc2t/add-model": {
      "post": {
        "tags": ["admin"],
        "summary": "Add Model",
        "description": "Adds new model to the global model list.",
        "operationId": "Add_model_admin_6rnp7bvc2t_add_model_post",
        "parameters": [
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_model_admin_6rnp7bvc2t_add_model_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/6rnp7bvc2t/send-messages": {
      "post": {
        "tags": ["admin"],
        "summary": "Send Message",
        "description": "Sends a message to all users.",
        "operationId": "Send_message_admin_6rnp7bvc2t_send_messages_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Send_message_admin_6rnp7bvc2t_send_messages_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/6rnp7bvc2t/gift-characters": {
      "post": {
        "tags": ["admin"],
        "summary": "Gift Characters",
        "description": "Gift characters to a user.",
        "operationId": "Gift_characters_admin_6rnp7bvc2t_gift_characters_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Gift_characters_admin_6rnp7bvc2t_gift_characters_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/6rnp7bvc2t/feedback-lottery": {
      "get": {
        "tags": ["admin"],
        "summary": "Feedback Lottery",
        "description": "Returns a list of [contributor, history] pairs that should be reviewed for feedback.",
        "operationId": "Feedback_lottery_admin_6rnp7bvc2t_feedback_lottery_get",
        "parameters": [
          {
            "description": "Date starting from which to consider feedback for lottery.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "Date From",
              "description": "Date starting from which to consider feedback for lottery.",
              "embed": true
            },
            "name": "date_from",
            "in": "query"
          },
          {
            "description": "End date for lottery feedbacks.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "Date To",
              "description": "End date for lottery feedbacks.",
              "embed": true
            },
            "name": "date_to",
            "in": "query"
          },
          {
            "description": "The limit of random feedbacks to return.",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "description": "The limit of random feedbacks to return.",
              "embed": true
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LotteryResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/6rnp7bvc2t/feedback-review": {
      "post": {
        "tags": ["admin"],
        "summary": "Feedback Review",
        "description": "Posts a review for the given feedback.",
        "operationId": "Feedback_Review_admin_6rnp7bvc2t_feedback_review_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Feedback_Review_admin_6rnp7bvc2t_feedback_review_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/6rnp7bvc2t/history/{user_id}/{history_item_id}/audio": {
      "get": {
        "tags": ["admin"],
        "summary": "Get Audio From History Item",
        "description": "Returns the audio of an history item.",
        "operationId": "Get_audio_from_history_item_admin_6rnp7bvc2t_history__user_id___history_item_id__audio_get",
        "parameters": [
          {
            "description": "The ID of the user.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id",
              "description": "The ID of the user.",
              "embed": true
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "description": "The ID of the history item.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "History Item Id",
              "description": "The ID of the history item.",
              "embed": true
            },
            "name": "history_item_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "audio/mpeg": { "schema": { "type": "string" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/6rnp7bvc2t/verification/{user_id}/{voice_id}/{file_id}/document": {
      "get": {
        "tags": ["admin"],
        "summary": "Get Document For Manual Verification",
        "description": "Returns the document corresponding to a pro voice manual verification request.",
        "operationId": "Get_document_for_manual_verification_admin_6rnp7bvc2t_verification__user_id___voice_id___file_id__document_get",
        "parameters": [
          {
            "description": "The ID of the user.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id",
              "description": "The ID of the user.",
              "embed": true
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "description": "The ID of the voice.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Voice Id",
              "description": "The ID of the voice.",
              "embed": true
            },
            "name": "voice_id",
            "in": "path"
          },
          {
            "description": "The ID of the file.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Id",
              "description": "The ID of the file.",
              "embed": true
            },
            "name": "file_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/6rnp7bvc2t/recordings/{user_id}/{voice_id}/{recording_id}/audio": {
      "get": {
        "tags": ["admin"],
        "summary": "Get Audio For Verification Recording.",
        "description": "Returns the audio corresponding to a professional sample attached to a voice.",
        "operationId": "Get_audio_for_verification_recording__admin_6rnp7bvc2t_recordings__user_id___voice_id___recording_id__audio_get",
        "parameters": [
          {
            "description": "The ID of the user.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id",
              "description": "The ID of the user.",
              "embed": true
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "description": "The ID of the voice.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Voice Id",
              "description": "The ID of the voice.",
              "embed": true
            },
            "name": "voice_id",
            "in": "path"
          },
          {
            "description": "The ID of the recording.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Recording Id",
              "description": "The ID of the recording.",
              "embed": true
            },
            "name": "recording_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "audio/*": {} }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/6rnp7bvc2t/slices/{user_id}/{voice_id}/{slice_id}/audio": {
      "get": {
        "tags": ["admin"],
        "summary": "Get Audio For Verification Audio Slice.",
        "description": "Returns the audio of a slice cut out of user uploaded audio for professional voice fine-tuning.",
        "operationId": "Get_audio_for_verification_audio_slice__admin_6rnp7bvc2t_slices__user_id___voice_id___slice_id__audio_get",
        "parameters": [
          {
            "description": "The ID of the user.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id",
              "description": "The ID of the user.",
              "embed": true
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "description": "The ID of the voice.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Voice Id",
              "description": "The ID of the voice.",
              "embed": true
            },
            "name": "voice_id",
            "in": "path"
          },
          {
            "description": "The ID of the recording.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Slice Id",
              "description": "The ID of the recording.",
              "embed": true
            },
            "name": "slice_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "audio/*": {} }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/6rnp7bvc2t/samples/{user_id}/{voice_id}/{sample_id}/audio": {
      "get": {
        "tags": ["admin"],
        "summary": "Get Audio From Sample",
        "description": "Returns the audio corresponding to a sample attached to a voice.",
        "operationId": "Get_audio_from_sample_admin_6rnp7bvc2t_samples__user_id___voice_id___sample_id__audio_get",
        "parameters": [
          {
            "description": "The ID of the user.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id",
              "description": "The ID of the user.",
              "embed": true
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "description": "The ID of the voice.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Voice Id",
              "description": "The ID of the voice.",
              "embed": true
            },
            "name": "voice_id",
            "in": "path"
          },
          {
            "description": "The ID of the sample.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Sample Id",
              "description": "The ID of the sample.",
              "embed": true
            },
            "name": "sample_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "audio/*": {} }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/6rnp7bvc2t/ban-user": {
      "post": {
        "tags": ["admin"],
        "summary": "Ban User",
        "description": "Ban user from the platform.",
        "operationId": "Ban_user_admin_6rnp7bvc2t_ban_user_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Ban_user_admin_6rnp7bvc2t_ban_user_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/6rnp7bvc2t/unban-user": {
      "post": {
        "tags": ["admin"],
        "summary": "Unban User",
        "description": "Unban a previously banned user.",
        "operationId": "Unban_user_admin_6rnp7bvc2t_unban_user_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Unban_user_admin_6rnp7bvc2t_unban_user_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/6rnp7bvc2t/generate-password-reset-link": {
      "post": {
        "tags": ["admin"],
        "summary": "Generate Password Reset Link",
        "description": "Generate password reset link for user.",
        "operationId": "Generate_password_reset_link_admin_6rnp7bvc2t_generate_password_reset_link_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Generate_password_reset_link_admin_6rnp7bvc2t_generate_password_reset_link_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/6rnp7bvc2t/get-user": {
      "post": {
        "tags": ["admin"],
        "summary": "Get User",
        "description": "Get User",
        "operationId": "Get_User_admin_6rnp7bvc2t_get_user_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Get_User_admin_6rnp7bvc2t_get_user_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/6rnp7bvc2t/update-user": {
      "post": {
        "tags": ["admin"],
        "summary": "Update User",
        "description": "Update User",
        "operationId": "Update_User_admin_6rnp7bvc2t_update_user_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_User_admin_6rnp7bvc2t_update_user_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/6rnp7bvc2t/transfer-voices": {
      "post": {
        "tags": ["admin"],
        "summary": "Transfer Voices",
        "description": "Transfer voices from one account to another.",
        "operationId": "Transfer_Voices_admin_6rnp7bvc2t_transfer_voices_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Transfer_Voices_admin_6rnp7bvc2t_transfer_voices_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/6rnp7bvc2t/voices-to-review": {
      "get": {
        "tags": ["admin"],
        "summary": "Get Voices To Review.",
        "description": "Returns a list of shared voices that users want to share in the voice library.",
        "operationId": "Get_voices_to_review__admin_6rnp7bvc2t_voices_to_review_get",
        "parameters": [
          {
            "description": "How many shared voices to return at maximum. Can not exceed 1000, defaults to 30.",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Page Size",
              "description": "How many shared voices to return at maximum. Can not exceed 1000, defaults to 30.",
              "default": 20
            },
            "name": "page_size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVoicesToReviewResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/6rnp7bvc2t/review-voice": {
      "post": {
        "tags": ["admin"],
        "summary": "Review Voice",
        "description": "Approves, approves with changes, rejects or removes voice from voice library.",
        "operationId": "Review_voice_admin_6rnp7bvc2t_review_voice_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Review_voice_admin_6rnp7bvc2t_review_voice_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/6rnp7bvc2t/library-voices": {
      "get": {
        "tags": ["admin"],
        "summary": "Get Library Voices To Review",
        "operationId": "Get_library_voices_to_review_admin_6rnp7bvc2t_library_voices_get",
        "parameters": [
          {
            "description": "How many shared voices to return at maximum. Can not exceed 1000, defaults to 30.",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Page Size",
              "description": "How many shared voices to return at maximum. Can not exceed 1000, defaults to 30.",
              "default": 20
            },
            "name": "page_size",
            "in": "query"
          },
          {
            "description": "search term used for filtering",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Search",
              "description": "search term used for filtering"
            },
            "example": "tiktok",
            "name": "search",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVoicesToReviewResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/models": {
      "get": {
        "tags": ["models"],
        "summary": "Get Models",
        "description": "Gets a list of available models.",
        "operationId": "Get_Models_v1_models_get",
        "parameters": [
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ModelResponseModel"
                  },
                  "type": "array",
                  "title": "Response Get Models V1 Models Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/audio-native": {
      "post": {
        "tags": ["audio-native"],
        "summary": "Creates Audionative Enabled Project.",
        "description": "Creates AudioNative enabled project, optionally starts conversion and returns project id and embeddable html snippet.",
        "operationId": "Creates_AudioNative_enabled_project__v1_audio_native_post",
        "parameters": [
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Creates_AudioNative_enabled_project__v1_audio_native_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioNativeCreateProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/audio-native/{public_user_id}/convert": {
      "post": {
        "tags": ["audio-native"],
        "summary": "Converts Provided Url To Project.",
        "description": "Converts provided url to project and returns project id.",
        "operationId": "Converts_provided_url_to_project__v1_audio_native__public_user_id__convert_post",
        "parameters": [
          {
            "description": "Public user ID used to publicly identify ElevenLabs users.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Public User Id",
              "description": "Public user ID used to publicly identify ElevenLabs users."
            },
            "example": "63e06b7e7cafdc46be4d2e0b3f045940231ae058d508589653d74d1265a574ca",
            "name": "public_user_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Converts_provided_url_to_project__v1_audio_native__public_user_id__convert_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioNativeConvertResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/audio-native/{public_user_id}/{project_id}/convert": {
      "post": {
        "tags": ["audio-native"],
        "summary": "Starts Conversion For The Audionative Enabled Project.",
        "description": "Starts conversion for the AudioNative enabled project.",
        "operationId": "Starts_conversion_for_the_AudioNative_enabled_project__v1_audio_native__public_user_id___project_id__convert_post",
        "parameters": [
          {
            "description": "Public user ID used to publicly identify ElevenLabs users.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Public User Id",
              "description": "Public user ID used to publicly identify ElevenLabs users."
            },
            "example": "63e06b7e7cafdc46be4d2e0b3f045940231ae058d508589653d74d1265a574ca",
            "name": "public_user_id",
            "in": "path"
          },
          {
            "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id",
              "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "project_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Starts_conversion_for_the_AudioNative_enabled_project__v1_audio_native__public_user_id___project_id__convert_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioNativeConvertResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/audio-native/{public_user_id}/{project_id}/audio": {
      "get": {
        "tags": ["audio-native"],
        "summary": "Get Audio",
        "description": "Gets the full audio of voiced article.",
        "operationId": "Get_audio_v1_audio_native__public_user_id___project_id__audio_get",
        "parameters": [
          {
            "description": "Public user ID used to publicly identify ElevenLabs users.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Public User Id",
              "description": "Public user ID used to publicly identify ElevenLabs users."
            },
            "example": "63e06b7e7cafdc46be4d2e0b3f045940231ae058d508589653d74d1265a574ca",
            "name": "public_user_id",
            "in": "path"
          },
          {
            "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id",
              "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "project_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/audio-native/{public_user_id}/{project_id}/metrics": {
      "post": {
        "tags": ["audio-native"],
        "summary": "Audionative Metrics",
        "description": "Collects metrics from the audio player.",
        "operationId": "AudioNative_metrics_v1_audio_native__public_user_id___project_id__metrics_post",
        "parameters": [
          {
            "description": "Public user ID used to publicly identify ElevenLabs users.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Public User Id",
              "description": "Public user ID used to publicly identify ElevenLabs users."
            },
            "example": "63e06b7e7cafdc46be4d2e0b3f045940231ae058d508589653d74d1265a574ca",
            "name": "public_user_id",
            "in": "path"
          },
          {
            "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id",
              "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "project_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_AudioNative_metrics_v1_audio_native__public_user_id___project_id__metrics_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/audio-native/{project_id}/publish/{snapshot_id}": {
      "post": {
        "tags": ["audio-native"],
        "summary": "Audionative Publish",
        "description": "Publishes specific version of the audio for a project.",
        "operationId": "AudioNative_publish_v1_audio_native__project_id__publish__snapshot_id__post",
        "parameters": [
          {
            "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id",
              "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "project_id",
            "in": "path"
          },
          {
            "description": "The project_snapshot_id of the project snapshot. You can query GET /v1/projects/{project_id}/snapshots to list all available snapshots for a project.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Snapshot Id",
              "description": "The project_snapshot_id of the project snapshot. You can query GET /v1/projects/{project_id}/snapshots to list all available snapshots for a project."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "snapshot_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/audio-native/{project_id}/settings": {
      "post": {
        "tags": ["audio-native"],
        "summary": "Audionative Settings",
        "description": "Updates player settings for the specific project.",
        "operationId": "AudioNative_settings_v1_audio_native__project_id__settings_post",
        "parameters": [
          {
            "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id",
              "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "project_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_AudioNative_settings_v1_audio_native__project_id__settings_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/audio-native/{public_user_id}/{project_id}/settings": {
      "get": {
        "tags": ["audio-native"],
        "summary": "Audionative Settings",
        "description": "Returns the settings for the audio player.",
        "operationId": "AudioNative_settings_v1_audio_native__public_user_id___project_id__settings_get",
        "parameters": [
          {
            "description": "Public user ID used to publicly identify ElevenLabs users.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Public User Id",
              "description": "Public user ID used to publicly identify ElevenLabs users."
            },
            "example": "63e06b7e7cafdc46be4d2e0b3f045940231ae058d508589653d74d1265a574ca",
            "name": "public_user_id",
            "in": "path"
          },
          {
            "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id",
              "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "project_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioNativeSettingsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/audio-native/{project_id}/general-stats": {
      "get": {
        "tags": ["audio-native"],
        "summary": "Audionative General Stats",
        "description": "Returns engagement, listens, views, unique listeners and played duration.",
        "operationId": "AudioNative_general_stats_v1_audio_native__project_id__general_stats_get",
        "parameters": [
          {
            "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id",
              "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "project_id",
            "in": "path"
          },
          {
            "description": "Aggregate window. One of 1h, 3h, 12h, 1d, 7d, 30d.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Window",
              "description": "Aggregate window. One of 1h, 3h, 12h, 1d, 7d, 30d.",
              "default": "1d"
            },
            "example": "1d",
            "name": "window",
            "in": "query"
          },
          {
            "description": "Start time. One of 1d, 7d, 30d, 90d, 1y.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Start",
              "description": "Start time. One of 1d, 7d, 30d, 90d, 1y.",
              "default": "7d"
            },
            "example": "7d",
            "name": "start",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioNativeGeneralStatsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/audio-native/{project_id}/player-stats": {
      "get": {
        "tags": ["audio-native"],
        "summary": "Audionative Player Stats",
        "description": "Returns player heat map and retention.",
        "operationId": "AudioNative_player_stats_v1_audio_native__project_id__player_stats_get",
        "parameters": [
          {
            "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id",
              "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "project_id",
            "in": "path"
          },
          {
            "description": "Aggregate window. One of 1h, 3h, 12h, 1d, 7d, 30d.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Window",
              "description": "Aggregate window. One of 1h, 3h, 12h, 1d, 7d, 30d.",
              "default": "1d"
            },
            "example": "1d",
            "name": "window",
            "in": "query"
          },
          {
            "description": "Start time. One of 1d, 7d, 30d, 90d, 1y.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Start",
              "description": "Start time. One of 1d, 7d, 30d, 90d, 1y.",
              "default": "7d"
            },
            "example": "7d",
            "name": "start",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioNativePlayerStatsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/audio-native/{project_id}/device-stats": {
      "get": {
        "tags": ["audio-native"],
        "summary": "Audionative Device Stats",
        "description": "Returns device breakdown.",
        "operationId": "AudioNative_device_stats_v1_audio_native__project_id__device_stats_get",
        "parameters": [
          {
            "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id",
              "description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "project_id",
            "in": "path"
          },
          {
            "description": "Aggregate window. One of 1h, 3h, 12h, 1d, 7d, 30d.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Window",
              "description": "Aggregate window. One of 1h, 3h, 12h, 1d, 7d, 30d.",
              "default": "1d"
            },
            "example": "1d",
            "name": "window",
            "in": "query"
          },
          {
            "description": "Start time. One of 1d, 7d, 30d, 90d, 1y.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Start",
              "description": "Start time. One of 1d, 7d, 30d, 90d, 1y.",
              "default": "7d"
            },
            "example": "7d",
            "name": "start",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioNativeDeviceStatsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/audio-native/settings": {
      "post": {
        "tags": ["audio-native"],
        "summary": "Audionative Config Update",
        "description": "Updates audio native config like triggers, global and per trigger group settings etc.",
        "operationId": "AudioNative_config_update_v1_audio_native_settings_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_AudioNative_config_update_v1_audio_native_settings_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/get-random-quote/{language}": {
      "get": {
        "summary": "Get Random Quote By Lang",
        "operationId": "get_random_quote_by_lang_get_random_quote__language__get",
        "parameters": [
          {
            "description": "The language to return the quote in, supported languages are: ['en', 'de', 'pl', 'es', 'it', 'fr'', 'pt', 'hi'].",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Language",
              "description": "The language to return the quote in, supported languages are: ['en', 'de', 'pl', 'es', 'it', 'fr'', 'pt', 'hi']."
            },
            "name": "language",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/QuoteResponseModel" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/reset-audio-documents": {
      "post": {
        "summary": "Reset Audio Documents",
        "description": "This function will be called on an interval by a cloud function. Only 1 function can be running at a time due to GlobalLock.",
        "operationId": "reset_audio_documents_c185a1ff66f4a1feaeb19931d4be4175_reset_audio_documents_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_reset_audio_documents_c185a1ff66f4a1feaeb19931d4be4175_reset_audio_documents_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/moderation/ai-speech-classification": {
      "post": {
        "tags": ["moderation"],
        "summary": "Ai Speech Classification",
        "description": "Classify whether an audio file was synthesized using ElevenLabs.",
        "operationId": "AI_Speech_Classification_v1_moderation_ai_speech_classification_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_AI_Speech_Classification_v1_moderation_ai_speech_classification_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AISpeechClassifierResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/shared-voices": {
      "get": {
        "tags": ["voices"],
        "summary": "Get Voices",
        "description": "Gets a list of shared voices.",
        "operationId": "Get_voices_v1_shared_voices_get",
        "parameters": [
          {
            "description": "How many shared voices to return at maximum. Can not exceed 1000, defaults to 30.",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Page Size",
              "description": "How many shared voices to return at maximum. Can not exceed 1000, defaults to 30.",
              "default": 30
            },
            "name": "page_size",
            "in": "query"
          },
          {
            "description": "This Sort ID is returned from the previou fetch. Use this parameter to load more. In case this parameter is not provided voice items will be fetched starting from the first one according to sorting criteria",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Last Sort Id",
              "description": "This Sort ID is returned from the previou fetch. Use this parameter to load more. In case this parameter is not provided voice items will be fetched starting from the first one according to sorting criteria"
            },
            "name": "last_sort_id",
            "in": "query"
          },
          {
            "description": "voice category used for filtering",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Category",
              "description": "voice category used for filtering"
            },
            "example": "professional",
            "name": "category",
            "in": "query"
          },
          {
            "description": "gender used for filtering",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Gender",
              "description": "gender used for filtering"
            },
            "example": "male",
            "name": "gender",
            "in": "query"
          },
          {
            "description": "age used for filtering",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Age",
              "description": "age used for filtering"
            },
            "example": "young",
            "name": "age",
            "in": "query"
          },
          {
            "description": "accent used for filtering",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Accent",
              "description": "accent used for filtering"
            },
            "example": "american",
            "name": "accent",
            "in": "query"
          },
          {
            "description": "search term used for filtering",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Search",
              "description": "search term used for filtering"
            },
            "example": "tiktok",
            "name": "search",
            "in": "query"
          },
          {
            "description": "use-case used for filtering",
            "required": false,
            "schema": {
              "items": { "type": "string" },
              "type": "array",
              "title": "Use Cases",
              "description": "use-case used for filtering"
            },
            "example": "audiobook",
            "name": "use_cases",
            "in": "query"
          },
          {
            "description": "sort criteria",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Sort",
              "description": "sort criteria"
            },
            "example": "created_date",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLibraryVoicesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/usage/character-stats": {
      "get": {
        "tags": ["usage"],
        "summary": "Usage General Metrics",
        "description": "Returns the usage metrics for the current user",
        "operationId": "Usage_general_metrics_v1_usage_character_stats_get",
        "parameters": [
          {
            "description": "Unix timestamp for the end window, in milliseconds.",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Start Unix",
              "description": "Unix timestamp for the end window, in milliseconds."
            },
            "example": "1688165999",
            "name": "start_unix",
            "in": "query"
          },
          {
            "description": "Unix timestamp for the start, in milliseconds.",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "End Unix",
              "description": "Unix timestamp for the start, in milliseconds."
            },
            "example": "1685574000",
            "name": "end_unix",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsageCharactersResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/usage/request-stats": {
      "get": {
        "tags": ["usage"],
        "summary": "Usage General Metrics",
        "description": "Returns the usage metrics for the current user",
        "operationId": "Usage_general_metrics_v1_usage_request_stats_get",
        "parameters": [
          {
            "description": "Aggregate window. One of 1h, 1d, 7d, 30d, 90d, 1y.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Start",
              "description": "Aggregate window. One of 1h, 1d, 7d, 30d, 90d, 1y.",
              "default": "1h"
            },
            "example": "1h",
            "name": "start",
            "in": "query"
          },
          {
            "description": "Aggregate window. One of 1m, 5m, 1h, 3h, 12h, 1d, 7d, 30d.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Window",
              "description": "Aggregate window. One of 1m, 5m, 1h, 3h, 12h, 1d, 7d, 30d.",
              "default": "1h"
            },
            "example": "1h",
            "name": "window",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsageRequestsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/dub-twitter-mentions": {
      "post": {
        "tags": ["twitter"],
        "summary": "Twitter Mentions",
        "operationId": "Twitter_mentions_c185a1ff66f4a1feaeb19931d4be4175_dub_twitter_mentions_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Twitter_mentions_c185a1ff66f4a1feaeb19931d4be4175_dub_twitter_mentions_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/play/{voice_id}/create": {
      "post": {
        "summary": "Create",
        "operationId": "create_v1_play__voice_id__create_post",
        "parameters": [
          {
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Voice Id",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
            },
            "example": "21m00Tcm4TlvDq8ikWAM",
            "name": "voice_id",
            "in": "path"
          },
          {
            "description": "Identifier of the model that will be used, you can query them using GET /v1/models.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Model Id",
              "description": "Identifier of the model that will be used, you can query them using GET /v1/models.",
              "default": "eleven_monolingual_v1"
            },
            "name": "model_id",
            "in": "query"
          },
          {
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Xi-Api-Key",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
            },
            "name": "xi-api-key",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_v1_play__voice_id__create_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlayDocumentResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/workspace/migrate": {
      "post": {
        "tags": ["workspace"],
        "summary": "Migrate To Workspaces",
        "operationId": "migrate_to_workspaces_c185a1ff66f4a1feaeb19931d4be4175_workspace_migrate_post",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "integer", "title": "Start Idx Exclusive" },
            "name": "start_idx_exclusive",
            "in": "query"
          },
          {
            "required": true,
            "schema": { "type": "integer", "title": "End Idx Inclusive" },
            "name": "end_idx_inclusive",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_migrate_to_workspaces_c185a1ff66f4a1feaeb19931d4be4175_workspace_migrate_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AISpeechClassifierResponseModel": {
        "properties": {
          "probability": { "type": "number", "title": "Probability" }
        },
        "type": "object",
        "required": ["probability"],
        "title": "AISpeechClassifierResponseModel"
      },
      "AccountMetadataResponseModel": {
        "properties": {
          "agrees_to_product_updates": {
            "type": "boolean",
            "title": "Agrees To Product Updates"
          }
        },
        "type": "object",
        "required": ["agrees_to_product_updates"],
        "title": "AccountMetadataResponseModel"
      },
      "AddProjectResponseModel": {
        "properties": {
          "project": { "$ref": "#/components/schemas/ProjectResponseModel" }
        },
        "type": "object",
        "required": ["project"],
        "title": "AddProjectResponseModel"
      },
      "AddVoiceResponseModel": {
        "properties": { "voice_id": { "type": "string", "title": "Voice Id" } },
        "type": "object",
        "required": ["voice_id"],
        "title": "AddVoiceResponseModel"
      },
      "AudioNativeConvertResponseModel": {
        "properties": {
          "project_id": { "type": "string", "title": "Project Id" },
          "audio_is_or_will_be_available": {
            "type": "boolean",
            "title": "Audio Is Or Will Be Available"
          }
        },
        "type": "object",
        "required": ["project_id", "audio_is_or_will_be_available"],
        "title": "AudioNativeConvertResponseModel"
      },
      "AudioNativeCreateProjectResponseModel": {
        "properties": {
          "project_id": { "type": "string", "title": "Project Id" },
          "converting": { "type": "boolean", "title": "Converting" },
          "html_snippet": { "type": "string", "title": "Html Snippet" }
        },
        "type": "object",
        "required": ["project_id", "converting", "html_snippet"],
        "title": "AudioNativeCreateProjectResponseModel"
      },
      "AudioNativeDeviceStatsResponseModel": {
        "properties": {
          "device_breakdown": {
            "items": { "$ref": "#/components/schemas/DeviceResponseModel" },
            "type": "array",
            "title": "Device Breakdown"
          }
        },
        "type": "object",
        "required": ["device_breakdown"],
        "title": "AudioNativeDeviceStatsResponseModel"
      },
      "AudioNativeGeneralStatsResponseModel": {
        "properties": {
          "time": {
            "items": { "type": "number" },
            "type": "array",
            "title": "Time"
          },
          "loads": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Loads"
          },
          "listens": {
            "items": { "type": "number" },
            "type": "array",
            "title": "Listens"
          },
          "unique_listeners": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Unique Listeners"
          },
          "listen_duration_cumsum": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Listen Duration Cumsum"
          },
          "listen_duration_rate": {
            "items": { "type": "number" },
            "type": "array",
            "title": "Listen Duration Rate"
          },
          "hype": {
            "items": { "type": "number" },
            "type": "array",
            "title": "Hype"
          }
        },
        "type": "object",
        "required": [
          "time",
          "loads",
          "listens",
          "unique_listeners",
          "listen_duration_cumsum",
          "listen_duration_rate",
          "hype"
        ],
        "title": "AudioNativeGeneralStatsResponseModel"
      },
      "AudioNativePlayerStatsResponseModel": {
        "properties": {
          "heat_map": {
            "additionalProperties": {
              "items": { "type": "integer" },
              "type": "array"
            },
            "type": "object",
            "title": "Heat Map"
          },
          "durations_map": {
            "items": { "type": "number" },
            "type": "array",
            "title": "Durations Map"
          }
        },
        "type": "object",
        "required": ["heat_map", "durations_map"],
        "title": "AudioNativePlayerStatsResponseModel"
      },
      "AudioNativeSettingsDBModel": {
        "properties": {
          "title": { "type": "string", "title": "Title" },
          "image": { "type": "string", "title": "Image" },
          "author": { "type": "string", "title": "Author" },
          "small": { "type": "boolean", "title": "Small" },
          "text_color": { "type": "string", "title": "Text Color" },
          "background_color": { "type": "string", "title": "Background Color" },
          "sessionization": { "type": "integer", "title": "Sessionization" },
          "autoselect_authors_voice": {
            "type": "boolean",
            "title": "Autoselect Authors Voice"
          },
          "voice_id": { "type": "string", "title": "Voice Id" },
          "model_id": { "type": "string", "title": "Model Id" },
          "auto_convert": {
            "type": "boolean",
            "title": "Auto Convert",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "title",
          "image",
          "author",
          "small",
          "text_color",
          "background_color",
          "sessionization",
          "autoselect_authors_voice",
          "voice_id",
          "model_id"
        ],
        "title": "AudioNativeSettingsDBModel"
      },
      "AudioNativeSettingsResponseModel": {
        "properties": {
          "title": { "type": "string", "title": "Title" },
          "image": { "type": "string", "title": "Image" },
          "author": { "type": "string", "title": "Author" },
          "small": { "type": "boolean", "title": "Small" },
          "text_color": { "type": "string", "title": "Text Color" },
          "background_color": { "type": "string", "title": "Background Color" },
          "sessionization": { "type": "integer", "title": "Sessionization" },
          "voice_id": { "type": "string", "title": "Voice Id" },
          "model_id": { "type": "string", "title": "Model Id" },
          "auto_convert": { "type": "boolean", "title": "Auto Convert" }
        },
        "type": "object",
        "required": [
          "title",
          "image",
          "author",
          "small",
          "text_color",
          "background_color",
          "sessionization",
          "voice_id",
          "model_id",
          "auto_convert"
        ],
        "title": "AudioNativeSettingsResponseModel"
      },
      "AudioNativeTriggerDBModel": {
        "properties": {
          "subdomain": { "type": "string", "title": "Subdomain" },
          "domain": { "type": "string", "title": "Domain" },
          "path": { "type": "string", "title": "Path" }
        },
        "type": "object",
        "required": ["subdomain", "domain", "path"],
        "title": "AudioNativeTriggerDBModel"
      },
      "Body_AI_Speech_Classification_v1_moderation_ai_speech_classification_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "One audio files to verify"
          }
        },
        "type": "object",
        "title": "Body_AI_Speech_Classification_v1_moderation_ai_speech_classification_post"
      },
      "Body_Add_fine_tuned_model_admin_6rnp7bvc2t_add_fine_tuned_model_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "The users e-mail"
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id",
            "description": "Voice ID"
          },
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "Model ID"
          }
        },
        "type": "object",
        "required": ["email", "voice_id", "model_id"],
        "title": "Body_Add_fine_tuned_model_admin_6rnp7bvc2t_add_fine_tuned_model_post"
      },
      "Body_Add_model_admin_6rnp7bvc2t_add_model_post": {
        "properties": {
          "model": {
            "allOf": [{ "$ref": "#/components/schemas/ModelDBModel" }],
            "title": "Model",
            "description": "TTS Model"
          },
          "pro_voices": {
            "items": { "$ref": "#/components/schemas/ProVoice" },
            "type": "array",
            "title": "Pro Voices",
            "description": "List of fine-tuned professional voices"
          }
        },
        "type": "object",
        "required": ["model", "pro_voices"],
        "title": "Body_Add_model_admin_6rnp7bvc2t_add_model_post"
      },
      "Body_Add_project_v1_projects_add_post": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the project, used for identification only."
          },
          "from_url": {
            "type": "string",
            "title": "From Url",
            "description": "An optional URL from which we will extract content to initialize the project. If this is set, 'from_url' must be null. If neither 'from_url' or 'from_document' are provided we will initialize the project as blank."
          },
          "from_document": {
            "type": "string",
            "format": "binary",
            "title": "From Document",
            "description": "An optional .epub, .pdf, .txt or similar file can be provided. If provided, we will initialize the project with its content. If this is set, 'from_url' must be null.  If neither 'from_url' or 'from_document' are provided we will initialize the project as blank."
          },
          "default_title_voice_id": {
            "type": "string",
            "title": "Default Title Voice Id",
            "description": "The voice_id that corresponds to the default voice used for new titles."
          },
          "default_paragraph_voice_id": {
            "type": "string",
            "title": "Default Paragraph Voice Id",
            "description": "The voice_id that corresponds to the default voice used for new paragraphs."
          },
          "default_model_id": {
            "type": "string",
            "title": "Default Model Id",
            "description": "The model_id of the model to be used for this project, you can query GET https://api.elevenlabs.io/v1/models to list all available models."
          },
          "quality_preset": {
            "type": "string",
            "title": "Quality of the generated audio.",
            "description": "Output quality of the generated audio. Must be one of:\nstandard - standard output format, 128kbps with 44.1kHz sample rate.\nhigh - high quality output format, 192kbps with 44.1kHz sample rate and major improvements on our side. Using this setting increases the character cost by 20%.\nultra - ultra quality output format, 192kbps with 44.1kHz sample rate and highest improvements on our side. Using this setting increases the character cost by 50%.\n",
            "default": "standard",
            "include_in_schema": true
          },
          "title": {
            "type": "string",
            "title": "Title",
            "description": "An optional name of the author of the project, this will be added as metadata to the mp3 file on project / chapter download."
          },
          "author": {
            "type": "string",
            "title": "Author",
            "description": "An optional name of the author of the project, this will be added as metadata to the mp3 file on project / chapter download."
          },
          "isbn_number": {
            "type": "string",
            "title": "Isbn Number",
            "description": "An optional ISBN number of the project you want to create, this will be added as metadata to the mp3 file on project / chapter download."
          },
          "acx_volume_normalization": {
            "type": "boolean",
            "title": "Acx Volume Normalization",
            "description": "When the project is downloaded, should the returned audio have postprocessing in order to make it compliant with ACX loudness requirements",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "default_title_voice_id",
          "default_paragraph_voice_id",
          "default_model_id"
        ],
        "title": "Body_Add_project_v1_projects_add_post"
      },
      "Body_Add_sharing_voice_v1_voices_add__public_user_id___voice_id__post": {
        "properties": {
          "new_name": {
            "type": "string",
            "title": "New Name",
            "description": "The name that identifies this voice. This will be displayed in the dropdown of the website."
          }
        },
        "type": "object",
        "required": ["new_name"],
        "title": "Body_Add_sharing_voice_v1_voices_add__public_user_id___voice_id__post"
      },
      "Body_Add_trial_admin_6rnp7bvc2t_add_trial_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "The users e-mail"
          },
          "voice_limit": {
            "type": "integer",
            "title": "Voice Limit",
            "description": "The new voice limit of the user"
          },
          "professional_voice_limit": {
            "type": "integer",
            "title": "Professional Voice Limit",
            "description": "The new professional voice limit of the user"
          },
          "character_limit": {
            "type": "integer",
            "title": "Character Limit",
            "description": "The new character_count of the user"
          },
          "trial_duration_days": {
            "type": "integer",
            "title": "Trial Duration Days",
            "description": "How long the trial will last in days"
          },
          "concurrency": {
            "type": "integer",
            "title": "Concurrency",
            "description": "How many requests the customer can run in parallel."
          }
        },
        "type": "object",
        "required": [
          "email",
          "voice_limit",
          "professional_voice_limit",
          "character_limit",
          "trial_duration_days",
          "concurrency"
        ],
        "title": "Body_Add_trial_admin_6rnp7bvc2t_add_trial_post"
      },
      "Body_Add_trial_admin_6rnp7bvc2t_upgrade_subscription_post": {
        "properties": {
          "tier": {
            "type": "string",
            "enum": [
              "starter",
              "creator",
              "independent_publisher",
              "growing_business",
              "enterprise"
            ],
            "title": "Tier",
            "description": "The tier to subscribe the user into"
          },
          "email": {
            "type": "string",
            "title": "Email",
            "description": "The users e-mail"
          },
          "company_name": {
            "type": "string",
            "title": "Company Name",
            "description": "The name of the enterprise client."
          },
          "voice_limit": {
            "type": "integer",
            "title": "Voice Limit",
            "description": "The new voice limit of the user"
          },
          "professional_voice_limit": {
            "type": "integer",
            "title": "Professional Voice Limit",
            "description": "The new professional voice limit of the user"
          },
          "character_limit": {
            "type": "integer",
            "title": "Character Limit",
            "description": "The new character_count of the user"
          },
          "cents_per_month_base_tier": {
            "type": "integer",
            "title": "Cents Per Month Base Tier",
            "description": "Price in cents the customer has to pay for the base tier on a recurring basis"
          },
          "cents_per_thousand_characters": {
            "type": "number",
            "title": "Cents Per Thousand Characters",
            "description": "How many cents the client should pay for every 1000 characters above his character limit."
          },
          "billing_threshold_cents": {
            "type": "integer",
            "title": "Billing Threshold Cents",
            "description": "At which repeating threshold in cents a new invoice will be send to the customer."
          },
          "concurrency": {
            "type": "integer",
            "title": "Concurrency",
            "description": "How many requests the customer can run in parallel."
          },
          "coupon_duration_in_months": {
            "type": "integer",
            "title": "Coupon Duration In Months",
            "description": "The duration in months this coupon will be valid for."
          },
          "coupon_percentage_off": {
            "type": "number",
            "title": "Coupon Percentage Off",
            "description": "The percentage this coupon will substract substract from the base monthly price (doesnt apply to usage based prices)."
          },
          "currency": {
            "type": "string",
            "enum": ["usd", "eur"],
            "title": "Currency",
            "description": "The currency in which the users payment will be converted into."
          },
          "collection_method": {
            "type": "string",
            "enum": ["charge_automatically", "send_invoice"],
            "title": "Collection Method",
            "description": "How to charge the customer. If set to 'send_invoice' we will send an invoice via email that the customer will have to pay. This is only possible for accounts that are accepted to use delayed payment methods. If set to 'charge_automatically' this will automatically bill from the subscriptions attached payment payment method."
          }
        },
        "type": "object",
        "required": [
          "tier",
          "email",
          "company_name",
          "voice_limit",
          "professional_voice_limit",
          "character_limit",
          "cents_per_month_base_tier",
          "cents_per_thousand_characters",
          "billing_threshold_cents",
          "concurrency",
          "coupon_duration_in_months",
          "coupon_percentage_off",
          "currency",
          "collection_method"
        ],
        "title": "Body_Add_trial_admin_6rnp7bvc2t_upgrade_subscription_post"
      },
      "Body_Add_voice_v1_voices_add_post": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name that identifies this voice. This will be displayed in the dropdown of the website."
          },
          "files": {
            "items": { "type": "string", "format": "binary" },
            "type": "array",
            "title": "Files",
            "description": "One or more audio files to clone the voice from"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "How would you describe the voice?"
          },
          "labels": {
            "type": "string",
            "title": "Labels",
            "description": "Serialized labels dictionary for the voice."
          }
        },
        "type": "object",
        "required": ["name", "files"],
        "title": "Body_Add_voice_v1_voices_add_post"
      },
      "Body_Adds_delayed_payment_methods_to_an_account_admin_6rnp7bvc2t_add_delayed_payment_methods_permissions_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "The users e-mail"
          }
        },
        "type": "object",
        "required": ["email"],
        "title": "Body_Adds_delayed_payment_methods_to_an_account_admin_6rnp7bvc2t_add_delayed_payment_methods_permissions_post"
      },
      "Body_AudioNative_config_update_v1_audio_native_settings_post": {
        "properties": {
          "audio_native": {
            "allOf": [
              { "$ref": "#/components/schemas/InputAudioNativeDBModel" }
            ],
            "title": "Audio Native",
            "description": "AudioNative configuration."
          }
        },
        "type": "object",
        "required": ["audio_native"],
        "title": "Body_AudioNative_config_update_v1_audio_native_settings_post"
      },
      "Body_AudioNative_metrics_v1_audio_native__public_user_id___project_id__metrics_post": {
        "properties": {
          "session_id": {
            "type": "string",
            "title": "Session Id",
            "description": "Player session ID. Either unique per load or over timeframe for the browser."
          },
          "event_type": {
            "type": "string",
            "title": "Event Type",
            "description": "Event type. Either play, pause, stop, seek, or volume."
          },
          "fields": {
            "type": "object",
            "title": "Fields",
            "description": "Event fields."
          }
        },
        "type": "object",
        "required": ["session_id", "event_type", "fields"],
        "title": "Body_AudioNative_metrics_v1_audio_native__public_user_id___project_id__metrics_post"
      },
      "Body_AudioNative_settings_v1_audio_native__project_id__settings_post": {
        "properties": {
          "enabled": {
            "type": "boolean",
            "title": "Enabled",
            "description": "AudioNative enabled for the project."
          },
          "settings": {
            "allOf": [
              { "$ref": "#/components/schemas/AudioNativeSettingsDBModel" }
            ],
            "title": "Settings",
            "description": "AudioNative settings."
          }
        },
        "type": "object",
        "required": ["enabled"],
        "title": "Body_AudioNative_settings_v1_audio_native__project_id__settings_post"
      },
      "Body_Ban_user_admin_6rnp7bvc2t_ban_user_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "The users e-mail"
          }
        },
        "type": "object",
        "required": ["email"],
        "title": "Body_Ban_user_admin_6rnp7bvc2t_ban_user_post"
      },
      "Body_Converts_provided_url_to_project__v1_audio_native__public_user_id__convert_post": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url",
            "description": "URL to convert."
          }
        },
        "type": "object",
        "title": "Body_Converts_provided_url_to_project__v1_audio_native__public_user_id__convert_post"
      },
      "Body_Create_a_subscription_admin_6rnp7bvc2t_create_subscription_post": {
        "properties": {
          "tier": {
            "type": "string",
            "enum": [
              "starter",
              "creator",
              "independent_publisher",
              "growing_business",
              "enterprise"
            ],
            "title": "Tier",
            "description": "The tier to subscribe the user into"
          },
          "email": {
            "type": "string",
            "title": "Email",
            "description": "The users e-mail"
          },
          "company_name": {
            "type": "string",
            "title": "Company Name",
            "description": "The name of the enterprise client."
          },
          "voice_limit": {
            "type": "integer",
            "title": "Voice Limit",
            "description": "The new voice limit of the user"
          },
          "professional_voice_limit": {
            "type": "integer",
            "title": "Professional Voice Limit",
            "description": "The new professional voice limit of the user"
          },
          "character_limit": {
            "type": "integer",
            "title": "Character Limit",
            "description": "The new character_count of the user"
          },
          "cents_per_month_base_tier": {
            "type": "integer",
            "title": "Cents Per Month Base Tier",
            "description": "Price in cents the customer has to pay for the base tier on a recurring basis"
          },
          "cents_per_thousand_characters": {
            "type": "number",
            "title": "Cents Per Thousand Characters",
            "description": "How many cents the client should pay for every 1000 characters above his character limit."
          },
          "billing_threshold_cents": {
            "type": "integer",
            "title": "Billing Threshold Cents",
            "description": "At which repeating threshold in cents a new invoice will be send to the customer."
          },
          "concurrency": {
            "type": "integer",
            "title": "Concurrency",
            "description": "How many requests the customer can run in parallel."
          },
          "coupon_duration_in_months": {
            "type": "integer",
            "title": "Coupon Duration In Months",
            "description": "The duration in months this coupon will be valid for."
          },
          "coupon_percentage_off": {
            "type": "number",
            "title": "Coupon Percentage Off",
            "description": "The percentage this coupon will substract substract from the base monthly price (doesnt apply to usage based prices)."
          },
          "currency": {
            "type": "string",
            "enum": ["usd", "eur"],
            "title": "Currency",
            "description": "The currency in which the users payment will be converted into."
          },
          "collection_method": {
            "type": "string",
            "enum": ["charge_automatically", "send_invoice"],
            "title": "Collection Method",
            "description": "How to charge the customer. If set to 'send_invoice' we will send an invoice via email that the customer will have to pay. This is only possible for accounts that are accepted to use delayed payment methods. If set to 'charge_automatically' this will automatically bill from the subscriptions attached payment payment method."
          }
        },
        "type": "object",
        "required": [
          "tier",
          "email",
          "company_name",
          "voice_limit",
          "professional_voice_limit",
          "character_limit",
          "cents_per_month_base_tier",
          "cents_per_thousand_characters",
          "billing_threshold_cents",
          "concurrency",
          "coupon_duration_in_months",
          "coupon_percentage_off",
          "currency",
          "collection_method"
        ],
        "title": "Body_Create_a_subscription_admin_6rnp7bvc2t_create_subscription_post"
      },
      "Body_Creates_AudioNative_enabled_project__v1_audio_native_post": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Project name."
          },
          "image": {
            "type": "string",
            "title": "Image",
            "description": "Image URL used in the player. If not provided, default image set in the Player settings is used."
          },
          "author": {
            "type": "string",
            "title": "Author",
            "description": "Author used in the player. If not provided, default author set in the Player settings is used."
          },
          "small": {
            "type": "boolean",
            "title": "Small",
            "description": "Whether to use small player or not. If not provided, default value set in the Player settings is used.",
            "default": false
          },
          "text_color": {
            "type": "string",
            "title": "Text Color",
            "description": "Text color used in the player. If not provided, default text color set in the Player settings is used."
          },
          "background_color": {
            "type": "string",
            "title": "Background Color",
            "description": "Background color used in the player. If not provided, default background color set in the Player settings is used."
          },
          "sessionization": {
            "type": "integer",
            "title": "Sessionization",
            "description": "Specifies for how many minutes to persist the session across page reloads. If not provided, default sessionization set in the Player settings is used.",
            "default": 0
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id",
            "description": "Voice ID used to voice the content. If not provided, default voice ID set in the Player settings is used."
          },
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "TTS Model ID used in the player. If not provided, default model ID set in the Player settings is used."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "HTML input file with a specific format."
          },
          "auto_convert": {
            "type": "boolean",
            "title": "Auto Convert",
            "description": "Whether to auto convert the project to audio or not.",
            "default": false
          }
        },
        "type": "object",
        "required": ["name", "file"],
        "title": "Body_Creates_AudioNative_enabled_project__v1_audio_native_post"
      },
      "Body_Delete_Voice_admin_6rnp7bvc2t_delete_verification_attempt_delete": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "The users e-mail"
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id",
            "description": "Voice ID"
          },
          "attempt_id": {
            "type": "integer",
            "title": "Attempt Id",
            "description": "Attempt ID"
          }
        },
        "type": "object",
        "required": ["email", "voice_id", "attempt_id"],
        "title": "Body_Delete_Voice_admin_6rnp7bvc2t_delete_verification_attempt_delete"
      },
      "Body_Delete_Voice_admin_6rnp7bvc2t_delete_voice_delete": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "The users e-mail"
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id",
            "description": "Voice ID"
          }
        },
        "type": "object",
        "required": ["email", "voice_id"],
        "title": "Body_Delete_Voice_admin_6rnp7bvc2t_delete_voice_delete"
      },
      "Body_Download_history_items_v1_history_download_post": {
        "properties": {
          "history_item_ids": {
            "items": { "type": "string" },
            "type": "array",
            "title": "History Item Ids",
            "description": "A list of history items to download, you can get IDs of history items and other metadata using the GET https://api.elevenlabs.io/v1/history endpoint."
          }
        },
        "type": "object",
        "required": ["history_item_ids"],
        "title": "Body_Download_history_items_v1_history_download_post"
      },
      "Body_Dub_a_video_or_an_audio_file_v1_dubbing_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "One or more audio files to clone the voice from"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Name of the dubbing project."
          },
          "source_url": {
            "type": "string",
            "title": "Source Url",
            "description": "URL of the source video/audio file."
          },
          "source_lang": {
            "type": "string",
            "title": "Source Lang",
            "description": "Source language."
          },
          "target_lang": {
            "type": "string",
            "title": "Target Lang",
            "description": "Target language."
          },
          "num_speakers": {
            "type": "integer",
            "title": "Num Speakers",
            "description": "Number of speakers to use for the dubbing."
          },
          "watermark": {
            "type": "boolean",
            "title": "Watermark",
            "description": "Whether to apply watermark to the output video.",
            "default": false
          },
          "start_time": {
            "type": "integer",
            "title": "Start Time",
            "description": "Start time of the source video/audio file."
          },
          "end_time": {
            "type": "integer",
            "title": "End Time",
            "description": "End time of the source video/audio file."
          },
          "highest_resolution": {
            "type": "boolean",
            "title": "Highest Resolution",
            "description": "Whether to use the highest resolution available.",
            "default": false
          },
          "dubbing_studio": {
            "type": "boolean",
            "title": "Dubbing Studio",
            "description": "Whether to prepare dub for edits in dubbing studio.",
            "default": true
          }
        },
        "type": "object",
        "required": ["target_lang"],
        "title": "Body_Dub_a_video_or_an_audio_file_v1_dubbing_post"
      },
      "Body_Dubs_provided_text_with_provided_voice_and_settings__v1_dubbing__dubbing_id__dub_post": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "Text to dub."
          },
          "voice_uid": {
            "type": "string",
            "title": "Voice Uid",
            "description": "Voice uid to dub with."
          },
          "voice_settings": {
            "allOf": [
              { "$ref": "#/components/schemas/VoiceSettingsResponseModel" }
            ],
            "title": "Voice Settings",
            "description": "Voice settings to dub with."
          },
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "Model id to dub with."
          },
          "language": {
            "type": "string",
            "title": "Language",
            "description": "Target language."
          },
          "minimum_duration": {
            "type": "number",
            "title": "Minimum Duration",
            "description": "Minimum duration of the dub."
          },
          "maximum_duration": {
            "type": "number",
            "title": "Maximum Duration",
            "description": "Maximum duration of the dub."
          }
        },
        "type": "object",
        "required": [
          "text",
          "voice_uid",
          "voice_settings",
          "model_id",
          "language",
          "minimum_duration",
          "maximum_duration"
        ],
        "title": "Body_Dubs_provided_text_with_provided_voice_and_settings__v1_dubbing__dubbing_id__dub_post"
      },
      "Body_Edit_voice_v1_voices__voice_id__edit_post": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name that identifies this voice. This will be displayed in the dropdown of the website."
          },
          "files": {
            "items": { "type": "string", "format": "binary" },
            "type": "array",
            "title": "Files",
            "description": "Audio files to add to the voice"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "How would you describe the voice?"
          },
          "labels": {
            "type": "string",
            "title": "Labels",
            "description": "Serialized labels dictionary for the voice."
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "Body_Edit_voice_v1_voices__voice_id__edit_post"
      },
      "Body_Enable_fine_tuning_admin_6rnp7bvc2t_enable_fine_tuning_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "The users e-mail"
          }
        },
        "type": "object",
        "required": ["email"],
        "title": "Body_Enable_fine_tuning_admin_6rnp7bvc2t_enable_fine_tuning_post"
      },
      "Body_Enable_manual_verification_admin_6rnp7bvc2t_enable_manual_verification_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "The users e-mail"
          }
        },
        "type": "object",
        "required": ["email"],
        "title": "Body_Enable_manual_verification_admin_6rnp7bvc2t_enable_manual_verification_post"
      },
      "Body_External_Provider_user_setup_v1_user_post_registration_user_setup_post": {
        "properties": {
          "pid": {
            "type": "string",
            "title": "Partnerstack Referer Id",
            "description": "The partner id within partnerstack for the referer of a new user.\n"
          },
          "xid": {
            "type": "string",
            "title": "Partnerstack XID",
            "description": "The click id within partnerstack for the referer of a new user.\n"
          }
        },
        "type": "object",
        "title": "Body_External_Provider_user_setup_v1_user_post_registration_user_setup_post"
      },
      "Body_Feedback_Review_admin_6rnp7bvc2t_feedback_review_post": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "The ID of the user."
          },
          "history_item_id": {
            "type": "string",
            "title": "History Item Id",
            "description": "The ID of the history item."
          },
          "review_status": {
            "type": "string",
            "title": "Review Status",
            "description": "The review status of the feedback."
          }
        },
        "type": "object",
        "required": ["user_id", "history_item_id", "review_status"],
        "title": "Body_Feedback_Review_admin_6rnp7bvc2t_feedback_review_post"
      },
      "Body_Generate_password_reset_link_admin_6rnp7bvc2t_generate_password_reset_link_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "The users e-mail"
          }
        },
        "type": "object",
        "required": ["email"],
        "title": "Body_Generate_password_reset_link_admin_6rnp7bvc2t_generate_password_reset_link_post"
      },
      "Body_Get_User_admin_6rnp7bvc2t_get_user_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "The users e-mail"
          }
        },
        "type": "object",
        "required": ["email"],
        "title": "Body_Get_User_admin_6rnp7bvc2t_get_user_post"
      },
      "Body_Get_dubbing_metadata_for_url__v1_dubbing_metadata_post": {
        "properties": {
          "source_url": {
            "type": "string",
            "title": "Source Url",
            "description": "URL of the source video/audio file."
          }
        },
        "type": "object",
        "title": "Body_Get_dubbing_metadata_for_url__v1_dubbing_metadata_post"
      },
      "Body_Gift_characters_admin_6rnp7bvc2t_gift_characters_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "The users e-mail"
          },
          "characters_to_gift": {
            "type": "integer",
            "title": "Characters To Gift",
            "description": "The amount of characters to gift for this user"
          }
        },
        "type": "object",
        "required": ["email", "characters_to_gift"],
        "title": "Body_Gift_characters_admin_6rnp7bvc2t_gift_characters_post"
      },
      "Body_Manual_verification_request_v1_voices__voice_id__manual_verification_post": {
        "properties": {
          "files": {
            "items": { "type": "string", "format": "binary" },
            "type": "array",
            "title": "Files",
            "description": "Verification documents"
          },
          "extra_text": {
            "type": "string",
            "title": "Extra Text",
            "description": "Extra text to be used in the manual verification process."
          }
        },
        "type": "object",
        "required": ["files"],
        "title": "Body_Manual_verification_request_v1_voices__voice_id__manual_verification_post"
      },
      "Body_Review_voice_admin_6rnp7bvc2t_review_voice_post": {
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "Approve",
              "ApproveWithChanges",
              "Reject",
              "Edit",
              "Remove"
            ],
            "title": "Action",
            "description": "Action to perform in review."
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Review message"
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id",
            "description": "Voice ID"
          },
          "public_user_id": {
            "type": "string",
            "title": "Public User Id",
            "description": "The ID of the user."
          },
          "voice_name": {
            "type": "string",
            "title": "Voice Name",
            "description": "The name that identifies this voice. This will be displayed in the dropdown of the website."
          },
          "voice_description": {
            "type": "string",
            "title": "Voice Description",
            "description": "How would you describe the voice?"
          },
          "voice_labels": {
            "type": "string",
            "title": "Voice Labels",
            "description": "Serialized labels dictionary for the voice."
          }
        },
        "type": "object",
        "required": [
          "action",
          "message",
          "voice_id",
          "public_user_id",
          "voice_name"
        ],
        "title": "Body_Review_voice_admin_6rnp7bvc2t_review_voice_post"
      },
      "Body_Send_message_admin_6rnp7bvc2t_send_messages_post": {
        "properties": {
          "severity": {
            "type": "string",
            "enum": ["success", "info", "warning", "error"],
            "title": "Severity",
            "description": "Severity of the message, has influence on the icon and background color"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "description": "The headline of the message to display"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "The description of the message"
          },
          "send_test_message": {
            "type": "boolean",
            "title": "Send Test Message",
            "description": "Whether to send the message only to the authenticated user"
          }
        },
        "type": "object",
        "required": ["severity", "title", "description", "send_test_message"],
        "title": "Body_Send_message_admin_6rnp7bvc2t_send_messages_post"
      },
      "Body_Send_password_reset_email_v1_user_send_password_reset_email_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "The email of the customer"
          }
        },
        "type": "object",
        "required": ["email"],
        "title": "Body_Send_password_reset_email_v1_user_send_password_reset_email_post"
      },
      "Body_Send_verification_email_v1_user_send_verification_email_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "The email of the customer"
          }
        },
        "type": "object",
        "required": ["email"],
        "title": "Body_Send_verification_email_v1_user_send_verification_email_post"
      },
      "Body_Share_voice_v1_voices__voice_id__share_post": {
        "properties": {
          "enable": {
            "type": "boolean",
            "title": "Enable",
            "description": "Whether to enable/disable sharing of the given voice."
          },
          "emails": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Emails",
            "description": "List of emails that are allowed to add the given voice."
          }
        },
        "type": "object",
        "required": ["enable", "emails"],
        "title": "Body_Share_voice_v1_voices__voice_id__share_post"
      },
      "Body_Speech_to_Speech_Streaming_v1_speech_to_speech__voice_id__stream_post": {
        "properties": {
          "audio": {
            "type": "string",
            "format": "binary",
            "title": "Audio",
            "description": "The audio file which holds the content and emotion that will control the generated speech."
          },
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for speech to speech, you can check this using the can_do_voice_conversion property.",
            "default": "eleven_english_sts_v2"
          },
          "voice_settings": {
            "allOf": [
              { "$ref": "#/components/schemas/VoiceSettingsResponseModel" }
            ],
            "title": "Voice Settings",
            "description": "Voice settings overriding stored setttings for the given voice. They are applied only on the given request."
          }
        },
        "type": "object",
        "required": ["audio"],
        "title": "Body_Speech_to_Speech_Streaming_v1_speech_to_speech__voice_id__stream_post"
      },
      "Body_Speech_to_Speech_v1_speech_to_speech__voice_id__post": {
        "properties": {
          "audio": {
            "type": "string",
            "format": "binary",
            "title": "Audio",
            "description": "The audio file which holds the content and emotion that will control the generated speech."
          },
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for speech to speech, you can check this using the can_do_voice_conversion property.",
            "default": "eleven_english_sts_v2"
          },
          "voice_settings": {
            "allOf": [
              { "$ref": "#/components/schemas/VoiceSettingsResponseModel" }
            ],
            "title": "Voice Settings",
            "description": "Voice settings overriding stored setttings for the given voice. They are applied only on the given request."
          }
        },
        "type": "object",
        "required": ["audio"],
        "title": "Body_Speech_to_Speech_v1_speech_to_speech__voice_id__post"
      },
      "Body_Start_Fine_Tuning_admin_6rnp7bvc2t_start_fine_tuning_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "The users e-mail"
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id",
            "description": "Voice ID"
          }
        },
        "type": "object",
        "required": ["email", "voice_id"],
        "title": "Body_Start_Fine_Tuning_admin_6rnp7bvc2t_start_fine_tuning_post"
      },
      "Body_Starts_conversion_for_the_AudioNative_enabled_project__v1_audio_native__public_user_id___project_id__convert_post": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url",
            "description": "URL to convert."
          }
        },
        "type": "object",
        "title": "Body_Starts_conversion_for_the_AudioNative_enabled_project__v1_audio_native__public_user_id___project_id__convert_post"
      },
      "Body_Text_to_speech_v1_text_to_speech__voice_id__post": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The text that will get converted into speech."
          },
          "language_id": {
            "title": "Language Id",
            "type": "string",
            "description": "Identifier of the language that will be used for the pronunciation of the text in the generated audio. You can get the list of the available languages using GET /v1/models. Please note, these languages will only work with multilingual models and not with the default eleven_monolingual_v1 model. With the default model they will have no effect.",
            "default": "en"
          },
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for text to speech, you can check this using the can_do_text_to_speech property.",
            "default": "eleven_monolingual_v1"
          },
          "voice_settings": {
            "allOf": [
              { "$ref": "#/components/schemas/VoiceSettingsResponseModel" }
            ],
            "title": "Voice Settings",
            "description": "Voice settings overriding stored setttings for the given voice. They are applied only on the given request."
          }
        },
        "type": "object",
        "required": ["text"],
        "title": "Body_Text_to_speech_v1_text_to_speech__voice_id__post"
      },
      "Body_Text_to_speech_v1_text_to_speech__voice_id__stream_post": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The text that will get converted into speech."
          },
          "language_id": {
            "title": "Language Id",
            "type": "string",
            "description": "Identifier of the language that will be used for the pronunciation of the text in the generated audio. You can get the list of the available languages using GET /v1/models. Please note, these languages will only work with multilingual models and not with the default eleven_monolingual_v1 model. With the default model they will have no effect.",
            "default": "en"
          },
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for text to speech, you can check this using the can_do_text_to_speech property.",
            "default": "eleven_monolingual_v1"
          },
          "voice_settings": {
            "allOf": [
              { "$ref": "#/components/schemas/VoiceSettingsResponseModel" }
            ],
            "title": "Voice Settings",
            "description": "Voice settings overriding stored setttings for the given voice. They are applied only on the given request."
          }
        },
        "type": "object",
        "required": ["text"],
        "title": "Body_Text_to_speech_v1_text_to_speech__voice_id__stream_post"
      },
      "Body_Transcribes_audio__v1_dubbing__dubbing_id__transcribe_post": {
        "properties": {
          "audio": {
            "allOf": [{ "$ref": "#/components/schemas/CBRAudioReference" }],
            "title": "Audio",
            "description": "Audio to transcribe."
          },
          "language": {
            "type": "string",
            "title": "Language",
            "description": "Source language."
          }
        },
        "type": "object",
        "required": ["audio"],
        "title": "Body_Transcribes_audio__v1_dubbing__dubbing_id__transcribe_post"
      },
      "Body_Transfer_Voices_admin_6rnp7bvc2t_transfer_voices_post": {
        "properties": {
          "from_email": {
            "type": "string",
            "title": "From Email",
            "description": "The users e-mail to transfer the voices from."
          },
          "to_email": {
            "type": "string",
            "title": "To Email",
            "description": "The users e-mail to transfer the voices to."
          },
          "mode": {
            "type": "string",
            "enum": ["copy", "move"],
            "title": "Mode",
            "description": "The mode to use when transfering voices, either 'copy' or 'move'. 'copy' will copy the voices from one user to another but not remove them afterwards. New voice_id and sample_id will be created. 'move' will copy the voices and remove them afterwards, voice_id and sample_id will not change."
          }
        },
        "type": "object",
        "required": ["from_email", "to_email", "mode"],
        "title": "Body_Transfer_Voices_admin_6rnp7bvc2t_transfer_voices_post"
      },
      "Body_Translates_text__v1_dubbing__dubbing_id__translate_post": {
        "properties": {
          "source_language": {
            "type": "string",
            "title": "Source Language",
            "description": "Source language."
          },
          "target_language": {
            "type": "string",
            "title": "Target Language",
            "description": "Target language."
          },
          "text": {
            "type": "string",
            "title": "Text",
            "description": "Text to dub into the target language."
          }
        },
        "type": "object",
        "required": ["target_language"],
        "title": "Body_Translates_text__v1_dubbing__dubbing_id__translate_post"
      },
      "Body_Twitter_mentions_c185a1ff66f4a1feaeb19931d4be4175_dub_twitter_mentions_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": ["internal_api_usage_secret"],
        "title": "Body_Twitter_mentions_c185a1ff66f4a1feaeb19931d4be4175_dub_twitter_mentions_post"
      },
      "Body_Unban_user_admin_6rnp7bvc2t_unban_user_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "The users e-mail"
          }
        },
        "type": "object",
        "required": ["email"],
        "title": "Body_Unban_user_admin_6rnp7bvc2t_unban_user_post"
      },
      "Body_Update_User_admin_6rnp7bvc2t_update_user_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "The users e-mail"
          },
          "can_use_professional_voices": {
            "type": "boolean",
            "title": "Can Use Professional Voices",
            "description": "Whether the user can use professional voices."
          },
          "voice_limit": {
            "type": "integer",
            "title": "Voice Limit",
            "description": "The new voice limit of the user"
          },
          "professional_voice_limit": {
            "type": "integer",
            "title": "Professional Voice Limit",
            "description": "The new professional voice limit of the user"
          },
          "concurrency": {
            "type": "integer",
            "title": "Concurrency",
            "description": "How many requests the customer can run in parallel."
          }
        },
        "type": "object",
        "required": [
          "email",
          "can_use_professional_voices",
          "voice_limit",
          "professional_voice_limit",
          "concurrency"
        ],
        "title": "Body_Update_User_admin_6rnp7bvc2t_update_user_post"
      },
      "Body_Vefify_Email_admin_6rnp7bvc2t_verify_email_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "The users e-mail"
          }
        },
        "type": "object",
        "required": ["email"],
        "title": "Body_Vefify_Email_admin_6rnp7bvc2t_verify_email_post"
      },
      "Body_Vefify_Voice_admin_6rnp7bvc2t_verify_voice_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "The users e-mail"
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id",
            "description": "Voice ID"
          }
        },
        "type": "object",
        "required": ["email", "voice_id"],
        "title": "Body_Vefify_Voice_admin_6rnp7bvc2t_verify_voice_post"
      },
      "Body_Voices_to_verify__admin_6rnp7bvc2t_professional_voices_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "The users e-mail"
          }
        },
        "type": "object",
        "required": ["email"],
        "title": "Body_Voices_to_verify__admin_6rnp7bvc2t_professional_voices_post"
      },
      "Body_change_subscription_change_subscription_post": {
        "properties": {
          "subscription_type": {
            "type": "string",
            "enum": ["starter", "creator", "pro", "growing_business"],
            "title": "Subscription Type",
            "description": "The type of subscription to subscribe to."
          }
        },
        "type": "object",
        "required": ["subscription_type"],
        "title": "Body_change_subscription_change_subscription_post"
      },
      "Body_convert_projects_c185a1ff66f4a1feaeb19931d4be4175_convert_projects_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": ["internal_api_usage_secret"],
        "title": "Body_convert_projects_c185a1ff66f4a1feaeb19931d4be4175_convert_projects_post"
      },
      "Body_create_checkout_session_create_checkout_session_post": {
        "properties": {
          "subscription_type": {
            "type": "string",
            "enum": ["starter", "creator", "pro", "growing_business"],
            "title": "Subscription Type",
            "description": "The type of subscription to subscribe to."
          },
          "currency": {
            "type": "string",
            "enum": ["usd", "eur"],
            "title": "Currency",
            "description": "The currency to subscribe to, can be either 'usd' or 'eur'."
          }
        },
        "type": "object",
        "required": ["subscription_type", "currency"],
        "title": "Body_create_checkout_session_create_checkout_session_post"
      },
      "Body_create_user_c185a1ff66f4a1feaeb19931d4be4175_create_user_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          },
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "user_id of the customer to create."
          },
          "email": {
            "type": "string",
            "title": "Email",
            "description": "E-Mail of the customer to create."
          },
          "created_using_password": {
            "type": "boolean",
            "title": "Created Using Password",
            "description": "Whether this account was registered using password authentication."
          },
          "provider_id": {
            "type": "string",
            "title": "Provider Id",
            "description": "The provider id of the external provider used to sign up."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret",
          "user_id",
          "email",
          "created_using_password"
        ],
        "title": "Body_create_user_c185a1ff66f4a1feaeb19931d4be4175_create_user_post"
      },
      "Body_create_v1_play__voice_id__create_post": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The text that will get converted into speech."
          }
        },
        "type": "object",
        "required": ["text"],
        "title": "Body_create_v1_play__voice_id__create_post"
      },
      "Body_detect_abuse_c185a1ff66f4a1feaeb19931d4be4175_detect_abuse_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": ["internal_api_usage_secret"],
        "title": "Body_detect_abuse_c185a1ff66f4a1feaeb19931d4be4175_detect_abuse_post"
      },
      "Body_fix_killed_dubbings_c185a1ff66f4a1feaeb19931d4be4175_fix_killed_dubbings_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": ["internal_api_usage_secret"],
        "title": "Body_fix_killed_dubbings_c185a1ff66f4a1feaeb19931d4be4175_fix_killed_dubbings_post"
      },
      "Body_google_ads_visit_v1_google_ads_visit_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "The email of the customer"
          },
          "event_type": {
            "type": "string",
            "title": "Event Type",
            "description": "Google Ads Event Type"
          },
          "gclid": {
            "type": "string",
            "title": "Gclid",
            "description": "Google Click Identifier"
          },
          "utm_source": {
            "type": "string",
            "title": "Utm Source",
            "description": "Google UTM Source"
          },
          "utm_medium": {
            "type": "string",
            "title": "Utm Medium",
            "description": "Google UTM Medium"
          },
          "utm_campaign": {
            "type": "string",
            "title": "Utm Campaign",
            "description": "Google UTM Campaign"
          },
          "utm_term": {
            "type": "string",
            "title": "Utm Term",
            "description": "Google UTM Term"
          },
          "utm_content": {
            "type": "string",
            "title": "Utm Content",
            "description": "Google UTM Content"
          }
        },
        "type": "object",
        "required": ["email"],
        "title": "Body_google_ads_visit_v1_google_ads_visit_post"
      },
      "Body_migrate_to_workspaces_c185a1ff66f4a1feaeb19931d4be4175_workspace_migrate_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": ["internal_api_usage_secret"],
        "title": "Body_migrate_to_workspaces_c185a1ff66f4a1feaeb19931d4be4175_workspace_migrate_post"
      },
      "Body_opt_out_of_updates_v1_user_opt_out_of_updates_post": {
        "properties": {
          "opt_out_updates_key": {
            "type": "string",
            "title": "Opt Out Updates Key",
            "description": "The secret key of the user to opt out of product updates"
          }
        },
        "type": "object",
        "required": ["opt_out_updates_key"],
        "title": "Body_opt_out_of_updates_v1_user_opt_out_of_updates_post"
      },
      "Body_prepare_internal_verification_v1_user_prepare_internal_verification_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "email of the user to verify."
          },
          "verification_code": {
            "type": "string",
            "title": "Verification Code",
            "description": "Account verification code."
          }
        },
        "type": "object",
        "required": ["email", "verification_code"],
        "title": "Body_prepare_internal_verification_v1_user_prepare_internal_verification_post"
      },
      "Body_refresh_character_count_c185a1ff66f4a1feaeb19931d4be4175_refresh_character_count_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": ["internal_api_usage_secret"],
        "title": "Body_refresh_character_count_c185a1ff66f4a1feaeb19931d4be4175_refresh_character_count_post"
      },
      "Body_report_usage_to_stripe_c185a1ff66f4a1feaeb19931d4be4175_report_usage_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          },
          "shard_idx_from_inclusive": {
            "type": "integer",
            "title": "Shard Idx From Inclusive",
            "description": "shard_idx from which the query should start. The maximum shard_idx is 2**16 - 1"
          },
          "shard_idx_to_exclusive": {
            "type": "integer",
            "title": "Shard Idx To Exclusive",
            "description": "shard_idx from which the query should stop. The maximum shard_idx is 2**16 - 1"
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret",
          "shard_idx_from_inclusive",
          "shard_idx_to_exclusive"
        ],
        "title": "Body_report_usage_to_stripe_c185a1ff66f4a1feaeb19931d4be4175_report_usage_post"
      },
      "Body_reset_audio_documents_c185a1ff66f4a1feaeb19931d4be4175_reset_audio_documents_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": ["internal_api_usage_secret"],
        "title": "Body_reset_audio_documents_c185a1ff66f4a1feaeb19931d4be4175_reset_audio_documents_post"
      },
      "Body_reset_projects_c185a1ff66f4a1feaeb19931d4be4175_reset_projects_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": ["internal_api_usage_secret"],
        "title": "Body_reset_projects_c185a1ff66f4a1feaeb19931d4be4175_reset_projects_post"
      },
      "Body_set_account_registration_metadata_v1_user_pre_sign_up_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "email of the user to set metadata of."
          },
          "account_metadata": {
            "$ref": "#/components/schemas/AccountMetadataResponseModel"
          },
          "recaptcha_token": {
            "type": "string",
            "title": "HCaptcha token",
            "description": "HCaptcha token used to prevent spam, generated on the frontend either automatically or when the client solves the hCapctha challenge.\n"
          },
          "pid": {
            "type": "string",
            "title": "Partnerstack Referer Id",
            "description": "The partner id within partnerstack for the referer of a new user.\n"
          },
          "xid": {
            "type": "string",
            "title": "Partnerstack XID",
            "description": "The click id within partnerstack for the referer of a new user.\n"
          }
        },
        "type": "object",
        "required": ["email", "account_metadata", "recaptcha_token"],
        "title": "Body_set_account_registration_metadata_v1_user_pre_sign_up_post"
      },
      "CBRAudioReference": {
        "properties": {
          "audio_uid": { "type": "string", "title": "Audio Uid" },
          "content_type": { "type": "string", "title": "Content Type" },
          "bitrate": { "type": "integer", "title": "Bitrate" },
          "duration": { "type": "number", "title": "Duration" },
          "span": { "$ref": "#/components/schemas/Span" }
        },
        "type": "object",
        "required": ["audio_uid", "content_type", "bitrate", "duration"],
        "title": "CBRAudioReference"
      },
      "ChapterResponseModel": {
        "properties": {
          "chapter_id": { "type": "string", "title": "Chapter Id" },
          "name": { "type": "string", "title": "Name" },
          "last_conversion_date_unix": {
            "type": "integer",
            "title": "Last Conversion Date Unix"
          },
          "conversion_progress": {
            "type": "number",
            "title": "Conversion Progress"
          },
          "can_be_downloaded": {
            "type": "boolean",
            "title": "Can Be Downloaded"
          },
          "state": {
            "type": "string",
            "enum": ["default", "converting"],
            "title": "State"
          },
          "statistics": {
            "$ref": "#/components/schemas/ChapterStatisticsResponseModel"
          }
        },
        "type": "object",
        "required": [
          "chapter_id",
          "name",
          "last_conversion_date_unix",
          "conversion_progress",
          "can_be_downloaded",
          "state",
          "statistics"
        ],
        "title": "ChapterResponseModel"
      },
      "ChapterSnapshotResponseModel": {
        "properties": {
          "chapter_snapshot_id": {
            "type": "string",
            "title": "Chapter Snapshot Id"
          },
          "project_id": { "type": "string", "title": "Project Id" },
          "chapter_id": { "type": "string", "title": "Chapter Id" },
          "created_at_unix": { "type": "integer", "title": "Created At Unix" },
          "name": { "type": "string", "title": "Name" }
        },
        "type": "object",
        "required": [
          "chapter_snapshot_id",
          "project_id",
          "chapter_id",
          "created_at_unix",
          "name"
        ],
        "title": "ChapterSnapshotResponseModel"
      },
      "ChapterSnapshotsResponseModel": {
        "properties": {
          "snapshots": {
            "items": {
              "$ref": "#/components/schemas/ChapterSnapshotResponseModel"
            },
            "type": "array",
            "title": "Snapshots"
          }
        },
        "type": "object",
        "required": ["snapshots"],
        "title": "ChapterSnapshotsResponseModel"
      },
      "ChapterStatisticsResponseModel": {
        "properties": {
          "characters_unconverted": {
            "type": "integer",
            "title": "Characters Unconverted"
          },
          "characters_converted": {
            "type": "integer",
            "title": "Characters Converted"
          },
          "paragraphs_converted": {
            "type": "integer",
            "title": "Paragraphs Converted"
          },
          "paragraphs_unconverted": {
            "type": "integer",
            "title": "Paragraphs Unconverted"
          }
        },
        "type": "object",
        "required": [
          "characters_unconverted",
          "characters_converted",
          "paragraphs_converted",
          "paragraphs_unconverted"
        ],
        "title": "ChapterStatisticsResponseModel"
      },
      "ContributorResponseModel": {
        "properties": {
          "user_id": { "type": "string", "title": "User Id" },
          "positive_feedback_count": {
            "type": "integer",
            "title": "Positive Feedback Count"
          },
          "accepted_feedback_count": {
            "type": "integer",
            "title": "Accepted Feedback Count"
          },
          "rewarded_feedback_count": {
            "type": "integer",
            "title": "Rewarded Feedback Count"
          },
          "rejected_feedback_count": {
            "type": "integer",
            "title": "Rejected Feedback Count"
          },
          "tokens_earned": { "type": "integer", "title": "Tokens Earned" },
          "top_contributor": { "type": "boolean", "title": "Top Contributor" },
          "free_subscription": {
            "type": "string",
            "title": "Free Subscription"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "positive_feedback_count",
          "accepted_feedback_count",
          "rewarded_feedback_count",
          "rejected_feedback_count",
          "tokens_earned",
          "top_contributor",
          "free_subscription"
        ],
        "title": "ContributorResponseModel"
      },
      "CreatePlayDocumentResponseModel": {
        "properties": {
          "document_id": { "type": "string", "title": "Document Id" }
        },
        "type": "object",
        "required": ["document_id"],
        "title": "CreatePlayDocumentResponseModel"
      },
      "DeviceResponseModel": {
        "properties": {
          "category": { "type": "string", "title": "Category" },
          "devices": {
            "additionalProperties": { "type": "integer" },
            "type": "object",
            "title": "Devices"
          }
        },
        "type": "object",
        "required": ["category", "devices"],
        "title": "DeviceResponseModel"
      },
      "DoDubbingResponseModel": {
        "properties": {
          "dubbing_id": { "type": "string", "title": "Dubbing Id" },
          "expected_duration_sec": {
            "type": "number",
            "title": "Expected Duration Sec"
          }
        },
        "type": "object",
        "required": ["dubbing_id", "expected_duration_sec"],
        "title": "DoDubbingResponseModel"
      },
      "DubbingCreateVoiceResponseModel": {
        "properties": {
          "voice_uid": { "type": "string", "title": "Voice Uid" }
        },
        "type": "object",
        "required": ["voice_uid"],
        "title": "DubbingCreateVoiceResponseModel"
      },
      "DubbingInputResponseModel": {
        "properties": {
          "id": { "type": "string", "title": "Id" },
          "title": { "type": "string", "title": "Title" },
          "content_type": { "type": "string", "title": "Content Type" },
          "source_type": { "type": "string", "title": "Source Type" },
          "has_audio": { "type": "boolean", "title": "Has Audio" },
          "has_video": { "type": "boolean", "title": "Has Video" },
          "duration": { "type": "number", "title": "Duration" },
          "input_bytes": {
            "type": "string",
            "format": "binary",
            "title": "Input Bytes"
          },
          "sle_bytes": {
            "type": "string",
            "format": "binary",
            "title": "Sle Bytes"
          }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "content_type",
          "source_type",
          "has_audio",
          "has_video",
          "duration",
          "input_bytes"
        ],
        "title": "DubbingInputResponseModel"
      },
      "DubbingTranscribeResponseModel": {
        "properties": {
          "text": { "type": "string", "title": "Text" },
          "language_code": { "type": "string", "title": "Language Code" }
        },
        "type": "object",
        "required": ["text", "language_code"],
        "title": "DubbingTranscribeResponseModel"
      },
      "DubbingTranslateResponseModel": {
        "properties": {
          "text": { "type": "string", "title": "Text" },
          "language_code": { "type": "string", "title": "Language Code" }
        },
        "type": "object",
        "required": ["text", "language_code"],
        "title": "DubbingTranslateResponseModel"
      },
      "EditorSnapshotResponseModel": {
        "properties": { "version": { "type": "integer", "title": "Version" } },
        "type": "object",
        "required": ["version"],
        "title": "EditorSnapshotResponseModel"
      },
      "ExtendedSubscriptionResponseModel": {
        "properties": {
          "tier": { "type": "string", "title": "Tier" },
          "character_count": { "type": "integer", "title": "Character Count" },
          "character_limit": { "type": "integer", "title": "Character Limit" },
          "can_extend_character_limit": {
            "type": "boolean",
            "title": "Can Extend Character Limit"
          },
          "allowed_to_extend_character_limit": {
            "type": "boolean",
            "title": "Allowed To Extend Character Limit"
          },
          "next_character_count_reset_unix": {
            "type": "integer",
            "title": "Next Character Count Reset Unix"
          },
          "voice_limit": { "type": "integer", "title": "Voice Limit" },
          "max_voice_add_edits": {
            "type": "integer",
            "title": "Max Voice Add Edits"
          },
          "voice_add_edit_counter": {
            "type": "integer",
            "title": "Voice Add Edit Counter"
          },
          "professional_voice_limit": {
            "type": "integer",
            "title": "Professional Voice Limit"
          },
          "can_extend_voice_limit": {
            "type": "boolean",
            "title": "Can Extend Voice Limit"
          },
          "can_use_instant_voice_cloning": {
            "type": "boolean",
            "title": "Can Use Instant Voice Cloning"
          },
          "can_use_professional_voice_cloning": {
            "type": "boolean",
            "title": "Can Use Professional Voice Cloning"
          },
          "currency": {
            "type": "string",
            "enum": ["usd", "eur"],
            "title": "Currency"
          },
          "status": {
            "type": "string",
            "enum": [
              "trialing",
              "active",
              "incomplete",
              "incomplete_expired",
              "past_due",
              "canceled",
              "unpaid",
              "free"
            ],
            "title": "Status"
          },
          "next_invoice": {
            "$ref": "#/components/schemas/InvoiceResponseModel"
          },
          "has_open_invoices": {
            "type": "boolean",
            "title": "Has Open Invoices"
          }
        },
        "type": "object",
        "required": [
          "tier",
          "character_count",
          "character_limit",
          "can_extend_character_limit",
          "allowed_to_extend_character_limit",
          "next_character_count_reset_unix",
          "voice_limit",
          "max_voice_add_edits",
          "voice_add_edit_counter",
          "professional_voice_limit",
          "can_extend_voice_limit",
          "can_use_instant_voice_cloning",
          "can_use_professional_voice_cloning",
          "currency",
          "status",
          "next_invoice",
          "has_open_invoices"
        ],
        "title": "ExtendedSubscriptionResponseModel"
      },
      "FeedbackResponseModel": {
        "properties": {
          "thumbs_up": { "type": "boolean", "title": "Thumbs Up" },
          "feedback": { "type": "string", "title": "Feedback" },
          "emotions": { "type": "boolean", "title": "Emotions" },
          "inaccurate_clone": {
            "type": "boolean",
            "title": "Inaccurate Clone"
          },
          "glitches": { "type": "boolean", "title": "Glitches" },
          "audio_quality": { "type": "boolean", "title": "Audio Quality" },
          "other": { "type": "boolean", "title": "Other" },
          "review_status": {
            "type": "string",
            "title": "Review Status",
            "default": "not_reviewed"
          }
        },
        "type": "object",
        "required": [
          "thumbs_up",
          "feedback",
          "emotions",
          "inaccurate_clone",
          "glitches",
          "audio_quality",
          "other"
        ],
        "title": "FeedbackResponseModel"
      },
      "FineTuningResponseModel": {
        "properties": {
          "language": { "type": "string", "title": "Language" },
          "is_allowed_to_fine_tune": {
            "type": "boolean",
            "title": "Is Allowed To Fine Tune"
          },
          "fine_tuning_requested": {
            "type": "boolean",
            "title": "Fine Tuning Requested"
          },
          "finetuning_state": {
            "type": "string",
            "enum": ["not_started", "is_fine_tuning", "fine_tuned"],
            "title": "Finetuning State"
          },
          "verification_attempts": {
            "items": {
              "$ref": "#/components/schemas/VerificationAttemptResponseModel"
            },
            "type": "array",
            "title": "Verification Attempts"
          },
          "verification_failures": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Verification Failures"
          },
          "verification_attempts_count": {
            "type": "integer",
            "title": "Verification Attempts Count"
          },
          "slice_ids": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Slice Ids"
          },
          "manual_verification": {
            "$ref": "#/components/schemas/ManualVerificationResponseModel"
          },
          "manual_verification_requested": {
            "type": "boolean",
            "title": "Manual Verification Requested"
          }
        },
        "type": "object",
        "required": [
          "language",
          "is_allowed_to_fine_tune",
          "fine_tuning_requested",
          "finetuning_state",
          "verification_attempts",
          "verification_failures",
          "verification_attempts_count",
          "slice_ids",
          "manual_verification",
          "manual_verification_requested"
        ],
        "title": "FineTuningResponseModel"
      },
      "GetChaptersResponseModel": {
        "properties": {
          "chapters": {
            "items": { "$ref": "#/components/schemas/ChapterResponseModel" },
            "type": "array",
            "title": "Chapters"
          }
        },
        "type": "object",
        "required": ["chapters"],
        "title": "GetChaptersResponseModel"
      },
      "GetHistoryResponseModel": {
        "properties": {
          "history": {
            "items": {
              "$ref": "#/components/schemas/HistoryItemResponseModel"
            },
            "type": "array",
            "title": "History"
          },
          "last_history_item_id": {
            "type": "string",
            "title": "Last History Item Id"
          },
          "has_more": { "type": "boolean", "title": "Has More" }
        },
        "type": "object",
        "required": ["history", "last_history_item_id", "has_more"],
        "title": "GetHistoryResponseModel"
      },
      "GetLibraryVoicesResponseModel": {
        "properties": {
          "voices": {
            "items": {
              "$ref": "#/components/schemas/LibraryVoiceResponseModel"
            },
            "type": "array",
            "title": "Voices"
          },
          "last_sort_id": { "type": "string", "title": "Last Sort Id" },
          "has_more": { "type": "boolean", "title": "Has More" }
        },
        "type": "object",
        "required": ["voices", "last_sort_id", "has_more"],
        "title": "GetLibraryVoicesResponseModel"
      },
      "GetProjectsResponseModel": {
        "properties": {
          "projects": {
            "items": { "$ref": "#/components/schemas/ProjectResponseModel" },
            "type": "array",
            "title": "Projects"
          }
        },
        "type": "object",
        "required": ["projects"],
        "title": "GetProjectsResponseModel"
      },
      "GetVoicesResponseModel": {
        "properties": {
          "voices": {
            "items": { "$ref": "#/components/schemas/VoiceResponseModel" },
            "type": "array",
            "title": "Voices"
          }
        },
        "type": "object",
        "required": ["voices"],
        "title": "GetVoicesResponseModel"
      },
      "GetVoicesToReviewResponseModel": {
        "properties": {
          "voices": {
            "items": { "$ref": "#/components/schemas/VoiceResponseModel" },
            "type": "array",
            "title": "Voices"
          },
          "owners": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Owners"
          }
        },
        "type": "object",
        "required": ["voices", "owners"],
        "title": "GetVoicesToReviewResponseModel"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": { "$ref": "#/components/schemas/ValidationError" },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HistoryItemResponseModel": {
        "properties": {
          "history_item_id": { "type": "string", "title": "History Item Id" },
          "request_id": { "type": "string", "title": "Request Id" },
          "voice_id": { "type": "string", "title": "Voice Id" },
          "model_id": { "type": "string", "title": "Model Id" },
          "voice_name": { "type": "string", "title": "Voice Name" },
          "voice_category": {
            "type": "string",
            "enum": ["premade", "cloned", "generated", "professional"],
            "title": "Voice Category"
          },
          "text": { "type": "string", "title": "Text" },
          "date_unix": { "type": "integer", "title": "Date Unix" },
          "character_count_change_from": {
            "type": "integer",
            "title": "Character Count Change From"
          },
          "character_count_change_to": {
            "type": "integer",
            "title": "Character Count Change To"
          },
          "content_type": { "type": "string", "title": "Content Type" },
          "state": {
            "type": "string",
            "enum": ["created", "deleted", "processing"],
            "title": "State"
          },
          "settings": { "type": "object", "title": "Settings" },
          "feedback": { "$ref": "#/components/schemas/FeedbackResponseModel" }
        },
        "type": "object",
        "required": [
          "history_item_id",
          "request_id",
          "voice_id",
          "model_id",
          "voice_name",
          "voice_category",
          "text",
          "date_unix",
          "character_count_change_from",
          "character_count_change_to",
          "content_type",
          "state",
          "settings",
          "feedback"
        ],
        "title": "HistoryItemResponseModel"
      },
      "InputAudioNativeDBModel": {
        "properties": {
          "enabled": { "type": "boolean", "title": "Enabled" },
          "global_settings": {
            "$ref": "#/components/schemas/AudioNativeSettingsDBModel"
          },
          "trigger_groups": {
            "items": {
              "$ref": "#/components/schemas/InputAudioNativeTriggerGroupDBModel"
            },
            "type": "array",
            "title": "Trigger Groups"
          },
          "basic_triggers": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Basic Triggers"
          }
        },
        "type": "object",
        "required": ["enabled"],
        "title": "InputAudioNativeDBModel"
      },
      "InputAudioNativeTriggerGroupDBModel": {
        "properties": {
          "name": { "type": "string", "title": "Name" },
          "enabled": { "type": "boolean", "title": "Enabled" },
          "triggers": {
            "items": {
              "$ref": "#/components/schemas/AudioNativeTriggerDBModel"
            },
            "type": "array",
            "title": "Triggers"
          },
          "settings": {
            "$ref": "#/components/schemas/AudioNativeSettingsDBModel"
          }
        },
        "type": "object",
        "required": ["name", "enabled"],
        "title": "InputAudioNativeTriggerGroupDBModel"
      },
      "InvoiceResponseModel": {
        "properties": {
          "amount_due_cents": {
            "type": "integer",
            "title": "Amount Due Cents"
          },
          "next_payment_attempt_unix": {
            "type": "integer",
            "title": "Next Payment Attempt Unix"
          }
        },
        "type": "object",
        "required": ["amount_due_cents", "next_payment_attempt_unix"],
        "title": "InvoiceResponseModel"
      },
      "LanguageDBModel": {
        "properties": {
          "language_id": { "type": "string", "title": "Language Id" },
          "name": { "type": "string", "title": "Name" }
        },
        "type": "object",
        "required": ["language_id", "name"],
        "title": "LanguageDBModel"
      },
      "LanguageResponseModel": {
        "properties": {
          "language_id": { "type": "string", "title": "Language Id" },
          "name": { "type": "string", "title": "Name" }
        },
        "type": "object",
        "required": ["language_id", "name"],
        "title": "LanguageResponseModel"
      },
      "LibraryVoiceResponseModel": {
        "properties": {
          "public_owner_id": { "type": "string", "title": "Public Owner Id" },
          "voice_id": { "type": "string", "title": "Voice Id" },
          "date_unix": { "type": "integer", "title": "Date Unix" },
          "name": { "type": "string", "title": "Name" },
          "accent": { "type": "string", "title": "Accent" },
          "gender": { "type": "string", "title": "Gender" },
          "age": { "type": "string", "title": "Age" },
          "descriptive": { "type": "string", "title": "Descriptive" },
          "use_case": { "type": "string", "title": "Use Case" },
          "category": { "type": "string", "title": "Category" },
          "language": { "type": "string", "title": "Language" },
          "description": { "type": "string", "title": "Description" },
          "preview_url": { "type": "string", "title": "Preview Url" },
          "usage_character_count_1y": {
            "type": "integer",
            "title": "Usage Character Count 1Y"
          },
          "usage_character_count_7d": {
            "type": "integer",
            "title": "Usage Character Count 7D"
          },
          "cloned_by_count": { "type": "integer", "title": "Cloned By Count" }
        },
        "type": "object",
        "required": [
          "public_owner_id",
          "voice_id",
          "date_unix",
          "name",
          "accent",
          "gender",
          "age",
          "descriptive",
          "use_case",
          "category",
          "language",
          "description",
          "preview_url",
          "usage_character_count_1y",
          "usage_character_count_7d",
          "cloned_by_count"
        ],
        "title": "LibraryVoiceResponseModel"
      },
      "LotteryResponseModel": {
        "properties": {
          "selected_candidates": {
            "items": {
              "items": [
                { "$ref": "#/components/schemas/ContributorResponseModel" },
                { "$ref": "#/components/schemas/HistoryItemResponseModel" }
              ],
              "type": "array",
              "maxItems": 2,
              "minItems": 2
            },
            "type": "array",
            "title": "Selected Candidates"
          }
        },
        "type": "object",
        "required": ["selected_candidates"],
        "title": "LotteryResponseModel"
      },
      "ManualVerificationFileResponseModel": {
        "properties": {
          "file_id": { "type": "string", "title": "File Id" },
          "file_name": { "type": "string", "title": "File Name" },
          "mime_type": { "type": "string", "title": "Mime Type" },
          "size_bytes": { "type": "integer", "title": "Size Bytes" },
          "upload_date_unix": { "type": "integer", "title": "Upload Date Unix" }
        },
        "type": "object",
        "required": [
          "file_id",
          "file_name",
          "mime_type",
          "size_bytes",
          "upload_date_unix"
        ],
        "title": "ManualVerificationFileResponseModel"
      },
      "ManualVerificationResponseModel": {
        "properties": {
          "extra_text": { "type": "string", "title": "Extra Text" },
          "request_time_unix": {
            "type": "integer",
            "title": "Request Time Unix"
          },
          "files": {
            "items": {
              "$ref": "#/components/schemas/ManualVerificationFileResponseModel"
            },
            "type": "array",
            "title": "Files"
          }
        },
        "type": "object",
        "required": ["extra_text", "request_time_unix", "files"],
        "title": "ManualVerificationResponseModel"
      },
      "ModelDBModel": {
        "properties": {
          "model_id": { "type": "string", "title": "Model Id" },
          "name": { "type": "string", "title": "Name" },
          "can_be_finetuned": {
            "type": "boolean",
            "title": "Can Be Finetuned"
          },
          "can_do_text_to_speech": {
            "type": "boolean",
            "title": "Can Do Text To Speech"
          },
          "can_do_voice_conversion": {
            "type": "boolean",
            "title": "Can Do Voice Conversion"
          },
          "can_use_style": { "type": "boolean", "title": "Can Use Style" },
          "has_tag_support": { "type": "boolean", "title": "Has Tag Support" },
          "serves_pro_voices": {
            "type": "boolean",
            "title": "Serves Pro Voices"
          },
          "token_cost_factor": {
            "type": "number",
            "title": "Token Cost Factor"
          },
          "description": { "type": "string", "title": "Description" },
          "instance_name": { "type": "string", "title": "Instance Name" },
          "available_for_tiers": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Available For Tiers"
          },
          "is_hidden": { "type": "boolean", "title": "Is Hidden" },
          "languages": {
            "items": { "$ref": "#/components/schemas/LanguageDBModel" },
            "type": "array",
            "title": "Languages"
          },
          "requires_alpha_access": {
            "type": "boolean",
            "title": "Requires Alpha Access"
          },
          "max_characters_request_free_user": {
            "type": "integer",
            "title": "Max Characters Request Free User"
          },
          "max_characters_request_subscribed_user": {
            "type": "integer",
            "title": "Max Characters Request Subscribed User"
          },
          "can_use_speaker_boost": {
            "type": "boolean",
            "title": "Can Use Speaker Boost"
          },
          "base_model": { "type": "string", "title": "Base Model" },
          "available_for_user_ids": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Available For User Ids"
          }
        },
        "type": "object",
        "required": [
          "model_id",
          "name",
          "can_be_finetuned",
          "can_do_text_to_speech",
          "can_do_voice_conversion",
          "can_use_style",
          "has_tag_support",
          "serves_pro_voices",
          "token_cost_factor",
          "description",
          "instance_name",
          "available_for_tiers",
          "is_hidden",
          "languages",
          "requires_alpha_access",
          "max_characters_request_free_user",
          "max_characters_request_subscribed_user",
          "can_use_speaker_boost"
        ],
        "title": "ModelDBModel"
      },
      "ModelResponseModel": {
        "properties": {
          "model_id": { "type": "string", "title": "Model Id" },
          "name": { "type": "string", "title": "Name" },
          "can_be_finetuned": {
            "type": "boolean",
            "title": "Can Be Finetuned"
          },
          "can_do_text_to_speech": {
            "type": "boolean",
            "title": "Can Do Text To Speech"
          },
          "can_do_voice_conversion": {
            "type": "boolean",
            "title": "Can Do Voice Conversion"
          },
          "can_use_style": { "type": "boolean", "title": "Can Use Style" },
          "can_use_speaker_boost": {
            "type": "boolean",
            "title": "Can Use Speaker Boost"
          },
          "serves_pro_voices": {
            "type": "boolean",
            "title": "Serves Pro Voices"
          },
          "token_cost_factor": {
            "type": "number",
            "title": "Token Cost Factor"
          },
          "description": { "type": "string", "title": "Description" },
          "requires_alpha_access": {
            "type": "boolean",
            "title": "Requires Alpha Access"
          },
          "max_characters_request_free_user": {
            "type": "integer",
            "title": "Max Characters Request Free User"
          },
          "max_characters_request_subscribed_user": {
            "type": "integer",
            "title": "Max Characters Request Subscribed User"
          },
          "languages": {
            "items": { "$ref": "#/components/schemas/LanguageResponseModel" },
            "type": "array",
            "title": "Languages"
          }
        },
        "type": "object",
        "required": [
          "model_id",
          "name",
          "can_be_finetuned",
          "can_do_text_to_speech",
          "can_do_voice_conversion",
          "can_use_style",
          "can_use_speaker_boost",
          "serves_pro_voices",
          "token_cost_factor",
          "description",
          "requires_alpha_access",
          "max_characters_request_free_user",
          "max_characters_request_subscribed_user",
          "languages"
        ],
        "title": "ModelResponseModel"
      },
      "ProVoice": {
        "properties": {
          "user_id": { "type": "string", "title": "User Id" },
          "voice_id": { "type": "string", "title": "Voice Id" }
        },
        "type": "object",
        "required": ["user_id", "voice_id"],
        "title": "ProVoice"
      },
      "ProjectExtendedResponseModel": {
        "properties": {
          "project_id": { "type": "string", "title": "Project Id" },
          "name": { "type": "string", "title": "Name" },
          "create_date_unix": {
            "type": "integer",
            "title": "Create Date Unix"
          },
          "default_title_voice_id": {
            "type": "string",
            "title": "Default Title Voice Id"
          },
          "default_paragraph_voice_id": {
            "type": "string",
            "title": "Default Paragraph Voice Id"
          },
          "default_model_id": { "type": "string", "title": "Default Model Id" },
          "last_conversion_date_unix": {
            "type": "integer",
            "title": "Last Conversion Date Unix"
          },
          "can_be_downloaded": {
            "type": "boolean",
            "title": "Can Be Downloaded"
          },
          "state": {
            "type": "string",
            "enum": ["default", "converting", "in_queue"],
            "title": "State"
          },
          "chapters": {
            "items": { "$ref": "#/components/schemas/ChapterResponseModel" },
            "type": "array",
            "title": "Chapters"
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "name",
          "create_date_unix",
          "default_title_voice_id",
          "default_paragraph_voice_id",
          "default_model_id",
          "last_conversion_date_unix",
          "can_be_downloaded",
          "state",
          "chapters"
        ],
        "title": "ProjectExtendedResponseModel"
      },
      "ProjectResponseModel": {
        "properties": {
          "project_id": { "type": "string", "title": "Project Id" },
          "name": { "type": "string", "title": "Name" },
          "create_date_unix": {
            "type": "integer",
            "title": "Create Date Unix"
          },
          "default_title_voice_id": {
            "type": "string",
            "title": "Default Title Voice Id"
          },
          "default_paragraph_voice_id": {
            "type": "string",
            "title": "Default Paragraph Voice Id"
          },
          "default_model_id": { "type": "string", "title": "Default Model Id" },
          "last_conversion_date_unix": {
            "type": "integer",
            "title": "Last Conversion Date Unix"
          },
          "can_be_downloaded": {
            "type": "boolean",
            "title": "Can Be Downloaded"
          },
          "title": { "type": "string", "title": "Title" },
          "author": { "type": "string", "title": "Author" },
          "isbn_number": { "type": "string", "title": "Isbn Number" },
          "acx_volume_normalization": {
            "type": "boolean",
            "title": "Acx Volume Normalization"
          },
          "state": {
            "type": "string",
            "enum": ["default", "converting"],
            "title": "State"
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "name",
          "create_date_unix",
          "default_title_voice_id",
          "default_paragraph_voice_id",
          "default_model_id",
          "last_conversion_date_unix",
          "can_be_downloaded",
          "title",
          "author",
          "isbn_number",
          "acx_volume_normalization",
          "state"
        ],
        "title": "ProjectResponseModel"
      },
      "ProjectSnapshotResponseModel": {
        "properties": {
          "project_snapshot_id": {
            "type": "string",
            "title": "Project Snapshot Id"
          },
          "project_id": { "type": "string", "title": "Project Id" },
          "created_at_unix": { "type": "integer", "title": "Created At Unix" },
          "name": { "type": "string", "title": "Name" }
        },
        "type": "object",
        "required": [
          "project_snapshot_id",
          "project_id",
          "created_at_unix",
          "name"
        ],
        "title": "ProjectSnapshotResponseModel"
      },
      "ProjectSnapshotsResponseModel": {
        "properties": {
          "snapshots": {
            "items": {
              "$ref": "#/components/schemas/ProjectSnapshotResponseModel"
            },
            "type": "array",
            "title": "Snapshots"
          }
        },
        "type": "object",
        "required": ["snapshots"],
        "title": "ProjectSnapshotsResponseModel"
      },
      "QuoteResponseModel": {
        "properties": { "text": { "type": "string", "title": "Text" } },
        "type": "object",
        "required": ["text"],
        "title": "QuoteResponseModel"
      },
      "RecordingResponseModel": {
        "properties": {
          "recording_id": { "type": "string", "title": "Recording Id" },
          "mime_type": { "type": "string", "title": "Mime Type" },
          "size_bytes": { "type": "integer", "title": "Size Bytes" },
          "upload_date_unix": {
            "type": "integer",
            "title": "Upload Date Unix"
          },
          "transcription": { "type": "string", "title": "Transcription" }
        },
        "type": "object",
        "required": [
          "recording_id",
          "mime_type",
          "size_bytes",
          "upload_date_unix",
          "transcription"
        ],
        "title": "RecordingResponseModel"
      },
      "SampleResponseModel": {
        "properties": {
          "sample_id": { "type": "string", "title": "Sample Id" },
          "file_name": { "type": "string", "title": "File Name" },
          "mime_type": { "type": "string", "title": "Mime Type" },
          "size_bytes": { "type": "integer", "title": "Size Bytes" },
          "hash": { "type": "string", "title": "Hash" }
        },
        "type": "object",
        "required": [
          "sample_id",
          "file_name",
          "mime_type",
          "size_bytes",
          "hash"
        ],
        "title": "SampleResponseModel"
      },
      "Span": {
        "properties": {
          "start": { "type": "number", "title": "Start" },
          "end": { "type": "number", "title": "End" }
        },
        "type": "object",
        "required": ["start", "end"],
        "title": "Span"
      },
      "SubscriptionResponseModel": {
        "properties": {
          "tier": { "type": "string", "title": "Tier" },
          "character_count": { "type": "integer", "title": "Character Count" },
          "character_limit": { "type": "integer", "title": "Character Limit" },
          "can_extend_character_limit": {
            "type": "boolean",
            "title": "Can Extend Character Limit"
          },
          "allowed_to_extend_character_limit": {
            "type": "boolean",
            "title": "Allowed To Extend Character Limit"
          },
          "next_character_count_reset_unix": {
            "type": "integer",
            "title": "Next Character Count Reset Unix"
          },
          "voice_limit": { "type": "integer", "title": "Voice Limit" },
          "max_voice_add_edits": {
            "type": "integer",
            "title": "Max Voice Add Edits"
          },
          "voice_add_edit_counter": {
            "type": "integer",
            "title": "Voice Add Edit Counter"
          },
          "professional_voice_limit": {
            "type": "integer",
            "title": "Professional Voice Limit"
          },
          "can_extend_voice_limit": {
            "type": "boolean",
            "title": "Can Extend Voice Limit"
          },
          "can_use_instant_voice_cloning": {
            "type": "boolean",
            "title": "Can Use Instant Voice Cloning"
          },
          "can_use_professional_voice_cloning": {
            "type": "boolean",
            "title": "Can Use Professional Voice Cloning"
          },
          "currency": {
            "type": "string",
            "enum": ["usd", "eur"],
            "title": "Currency"
          },
          "status": {
            "type": "string",
            "enum": [
              "trialing",
              "active",
              "incomplete",
              "incomplete_expired",
              "past_due",
              "canceled",
              "unpaid",
              "free"
            ],
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "tier",
          "character_count",
          "character_limit",
          "can_extend_character_limit",
          "allowed_to_extend_character_limit",
          "next_character_count_reset_unix",
          "voice_limit",
          "max_voice_add_edits",
          "voice_add_edit_counter",
          "professional_voice_limit",
          "can_extend_voice_limit",
          "can_use_instant_voice_cloning",
          "can_use_professional_voice_cloning",
          "currency",
          "status"
        ],
        "title": "SubscriptionResponseModel"
      },
      "UsageCharactersResponseModel": {
        "properties": {
          "time": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Time"
          },
          "usage": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Usage"
          }
        },
        "type": "object",
        "required": ["time", "usage"],
        "title": "UsageCharactersResponseModel"
      },
      "UsageRequestsResponseModel": {
        "properties": {
          "time": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Time"
          },
          "max_concurrent": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Max Concurrent"
          },
          "average_concurrent": {
            "items": { "type": "number" },
            "type": "array",
            "title": "Average Concurrent"
          },
          "count": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Count"
          },
          "limit_concurrent": { "type": "integer", "title": "Limit Concurrent" }
        },
        "type": "object",
        "required": [
          "time",
          "max_concurrent",
          "average_concurrent",
          "count",
          "limit_concurrent"
        ],
        "title": "UsageRequestsResponseModel"
      },
      "UserResponseModel": {
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/SubscriptionResponseModel"
          },
          "is_new_user": { "type": "boolean", "title": "Is New User" },
          "xi_api_key": { "type": "string", "title": "Xi Api Key" },
          "can_use_delayed_payment_methods": {
            "type": "boolean",
            "title": "Can Use Delayed Payment Methods"
          }
        },
        "type": "object",
        "required": [
          "subscription",
          "is_new_user",
          "xi_api_key",
          "can_use_delayed_payment_methods"
        ],
        "title": "UserResponseModel"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      },
      "VerificationAttemptResponseModel": {
        "properties": {
          "text": { "type": "string", "title": "Text" },
          "date_unix": { "type": "integer", "title": "Date Unix" },
          "accepted": { "type": "boolean", "title": "Accepted" },
          "similarity": { "type": "number", "title": "Similarity" },
          "levenshtein_distance": {
            "type": "number",
            "title": "Levenshtein Distance"
          },
          "recording": { "$ref": "#/components/schemas/RecordingResponseModel" }
        },
        "type": "object",
        "required": [
          "text",
          "date_unix",
          "accepted",
          "similarity",
          "levenshtein_distance",
          "recording"
        ],
        "title": "VerificationAttemptResponseModel"
      },
      "VoiceResponseModel": {
        "properties": {
          "voice_id": { "type": "string", "title": "Voice Id" },
          "name": { "type": "string", "title": "Name" },
          "samples": {
            "items": { "$ref": "#/components/schemas/SampleResponseModel" },
            "type": "array",
            "title": "Samples"
          },
          "category": { "type": "string", "title": "Category" },
          "fine_tuning": {
            "$ref": "#/components/schemas/FineTuningResponseModel"
          },
          "labels": {
            "additionalProperties": { "type": "string" },
            "type": "object",
            "title": "Labels"
          },
          "description": { "type": "string", "title": "Description" },
          "preview_url": { "type": "string", "title": "Preview Url" },
          "available_for_tiers": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Available For Tiers"
          },
          "settings": {
            "$ref": "#/components/schemas/VoiceSettingsResponseModel"
          },
          "sharing": {
            "$ref": "#/components/schemas/VoiceSharingResponseModel"
          },
          "high_quality_base_model_ids": {
            "items": { "type": "string" },
            "type": "array",
            "title": "High Quality Base Model Ids"
          }
        },
        "type": "object",
        "required": [
          "voice_id",
          "name",
          "samples",
          "category",
          "fine_tuning",
          "labels",
          "description",
          "preview_url",
          "available_for_tiers",
          "settings",
          "sharing",
          "high_quality_base_model_ids"
        ],
        "title": "VoiceResponseModel"
      },
      "VoiceSettingsResponseModel": {
        "properties": {
          "stability": { "type": "number", "title": "Stability" },
          "similarity_boost": { "type": "number", "title": "Similarity Boost" },
          "style": { "type": "number", "title": "Style", "default": 0.0 },
          "use_speaker_boost": {
            "type": "boolean",
            "title": "Use Speaker Boost",
            "default": true
          }
        },
        "type": "object",
        "required": ["stability", "similarity_boost"],
        "title": "VoiceSettingsResponseModel"
      },
      "VoiceSharingResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "enum": ["enabled", "disabled", "copied", "copied_disabled"],
            "title": "Status"
          },
          "history_item_sample_id": {
            "type": "string",
            "title": "History Item Sample Id"
          },
          "original_voice_id": {
            "type": "string",
            "title": "Original Voice Id"
          },
          "public_owner_id": { "type": "string", "title": "Public Owner Id" },
          "liked_by_count": { "type": "integer", "title": "Liked By Count" },
          "cloned_by_count": { "type": "integer", "title": "Cloned By Count" },
          "whitelisted_emails": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Whitelisted Emails"
          },
          "name": { "type": "string", "title": "Name" },
          "labels": {
            "additionalProperties": { "type": "string" },
            "type": "object",
            "title": "Labels"
          },
          "description": { "type": "string", "title": "Description" },
          "review_status": {
            "type": "string",
            "enum": [
              "not_requested",
              "pending",
              "declined",
              "allowed",
              "allowed_with_changes"
            ],
            "title": "Review Status"
          },
          "review_message": { "type": "string", "title": "Review Message" },
          "enabled_in_library": {
            "type": "boolean",
            "title": "Enabled In Library"
          }
        },
        "type": "object",
        "required": [
          "status",
          "history_item_sample_id",
          "original_voice_id",
          "public_owner_id",
          "liked_by_count",
          "cloned_by_count",
          "whitelisted_emails",
          "name",
          "labels",
          "description",
          "review_status",
          "review_message",
          "enabled_in_library"
        ],
        "title": "VoiceSharingResponseModel"
      },
      "VoiceSharingStatsResponseModel": {
        "properties": {
          "time": {
            "items": { "type": "number" },
            "type": "array",
            "title": "Time"
          },
          "usage": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Usage"
          },
          "rewards": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Rewards"
          }
        },
        "type": "object",
        "required": ["time", "usage", "rewards"],
        "title": "VoiceSharingStatsResponseModel"
      }
    }
  },
  "tags": [
    {
      "name": "text-to-speech",
      "description": "Convert text into lifelike speech using a voice of your choice."
    },
    {
      "name": "speech-to-speech",
      "description": "Create speech by combining the style and content of an audio file you upload with a voice of your choice."
    },
    {
      "name": "models",
      "description": "Access the different models of the platform."
    },
    {
      "name": "voices",
      "description": "Access to voices created either by you or us."
    },
    {
      "name": "samples",
      "description": "Access to your samples. A sample is any audio file you attached to a voice. A voice can have one or more samples."
    },
    {
      "name": "history",
      "description": "Accesses your history. Your history is a list of all your created audio including its metadata."
    },
    {
      "name": "projects",
      "description": "Access, create and convert Projects programmatically, only specifically whitelisted accounts can access the Projects API. If you need access please contact our sales team."
    }
  ]
}
